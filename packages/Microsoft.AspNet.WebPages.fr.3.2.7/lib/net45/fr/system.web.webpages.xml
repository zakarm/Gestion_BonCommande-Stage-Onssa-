<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.WebPages</name>
  </assembly>
  <members>
    <member name="T:System.Web.Helpers.AntiForgery">
      <summary>Permet d'empêcher des scripts malveillants d'envoyer des demandes de pages contrefaites.</summary>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetHtml">
      <summary>Ajoute un jeton d'authentification à un formulaire afin d'offrir une protection contre la falsification de requête.</summary>
      <returns>Retourne une chaîne qui contient la valeur de jeton chiffrée dans un champ HTML masqué.</returns>
      <exception cref="T:System.ArgumentException">L'objet actuel <see cref="T:System.Web.HttpContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetHtml(System.Web.HttpContextBase,System.String,System.String,System.String)">
      <summary>Ajoute un jeton d'authentification à un formulaire afin d'offrir une protection contre la falsification de requête et permet aux appelants de spécifier les détails sur l'authentification.</summary>
      <returns>Retourne la valeur de jeton chiffrée dans un champ HTML masqué.</returns>
      <param name="httpContext">Données de contexte HTTP pour une demande.</param>
      <param name="salt">Chaîne facultative de caractères aléatoires (telle que Z*7g1&amp;p4) qui est utilisée pour rendre plus complexe le chiffrement afin de bénéficier d'une sécurité supplémentaire.La valeur par défaut est null.</param>
      <param name="domain">Domaine d'une application Web à partir de laquelle une demande est envoyée.</param>
      <param name="path">Chemin d'accès racine virtuel d'une application Web à partir de laquelle une demande est envoyée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetTokens(System.String,System.String@,System.String@)">
      <summary>Obtient les jetons de recherche.</summary>
      <param name="oldCookieToken">Jeton de cookie précédent.</param>
      <param name="newCookieToken">Nouveau jeton de cookie.</param>
      <param name="formToken">Formulaire du jeton.</param>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate">
      <summary>Valide le fait que les données d'entrée d'un champ de formulaire HTML proviennent de l'utilisateur qui a envoyé les données.</summary>
      <exception cref="T:System.ArgumentException">L'objet actuel <see cref="T:System.Web.HttpContext" /> a la valeur null.</exception>
      <exception cref="T:System.Web.Helpers.HttpAntiForgeryException">Le jeton de cookie HTTP qui accompagne une demande valide est manquantouLe jeton de formulaire est manquant.ouLa valeur de jeton du formulaire ne correspond pas à la valeur de jeton du cookie.ouLa valeur de jeton du formulaire ne correspond pas à la valeur de jeton du cookie.</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate(System.String,System.String)">
      <summary>Valide le fait que les données d'entrée d'un champ de formulaire HTML proviennent de l'utilisateur qui a envoyé les données.</summary>
      <param name="cookieToken">Valeur du jeton de cookie.</param>
      <param name="formToken">Formulaire de jeton.</param>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate(System.Web.HttpContextBase,System.String)">
      <summary>Valide le fait que les données d'entrée d'un champ de formulaire HTML proviennent de l'utilisateur qui a envoyé les données et permet aux appelants de spécifier des détails de validation supplémentaires.</summary>
      <param name="httpContext">Données de contexte HTTP pour une demande.</param>
      <param name="salt">Chaîne facultative de caractères aléatoires (telle que Z*7g1&amp;p4) qui permet de déchiffrer un jeton d'authentification créé par la classe <see cref="T:System.Web.Helpers.AntiForgery" /> class.La valeur par défaut est null.</param>
      <exception cref="T:System.ArgumentException">L'objet actuel <see cref="T:System.Web.HttpContext" /> a la valeur null.</exception>
      <exception cref="T:System.Web.Helpers.HttpAntiForgeryException">Le jeton de cookie HTTP qui accompagne une demande valide est manquant.ouLe jeton de formulaire est manquant.ouLa valeur de jeton du formulaire ne correspond pas à la valeur de jeton du cookie.ouLa valeur de jeton du formulaire ne correspond pas à la valeur de jeton du cookie.ouLa valeur <paramref name="salt" /> fournie ne correspond pas à la valeur <paramref name="salt" /> utilisée pour créer le jeton de formulaire.</exception>
    </member>
    <member name="T:System.Web.Helpers.AntiForgeryConfig">
      <summary>Fournit une configuration par programme pour le système de jeton anti-contrefaçon.</summary>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.AdditionalDataProvider">
      <summary>Obtient un fournisseur de données qui peut fournir des données supplémentaires à intégrer aux jetons générés et qui peut valider d'autres données dans les jetons entrants.</summary>
      <returns>Fournisseur de données.</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.CookieName">
      <summary>Obtient ou définit le nom du cookie utilisé par le système anti-contrefaçon.</summary>
      <returns>Nom du cookie.</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.RequireSsl">
      <summary>Obtient ou définit une valeur qui indique si SSL est requis pour retourner le cookie anti-contrefaçon au serveur.</summary>
      <returns>true si SSL est requis pour retourner le cookie anti-contrefaçon au serveur ; sinon, false. </returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.SuppressIdentityHeuristicChecks">
      <summary>Obtient ou définit une valeur qui indique si le système anti-contrefaçon doit ignorer la vérification des conditions qui peuvent indiquer une utilisation incorrecte du système.</summary>
      <returns>true si le système anti-contrefaçon ne doit pas vérifier une éventuelle utilisation incorrecte ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.SuppressXFrameOptionsHeader">
      <summary>Indique la suppression de la génération de l'en-tête X-Frame-Options utilisé pour empêcher ClickJacking.Par défaut, l'en-tête X-Frame-Options est généré avec la valeur SAMEORIGIN.Si ce paramètre a la valeur 'true', l'en-tête X-Frame-Options ne sera pas généré pour la réponse.</summary>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.UniqueClaimTypeIdentifier">
      <summary>Si une autorisation basée sur les revendications est utilisée, obtient ou définit le type de revendication à partir de l'identité utilisée pour identifier l'utilisateur de manière unique.</summary>
      <returns>Type de revendication.</returns>
    </member>
    <member name="T:System.Web.Helpers.IAntiForgeryAdditionalDataProvider">
      <summary>Permet d'inclure ou de valider des données personnalisées pour les jetons anti-contrefaçon.</summary>
    </member>
    <member name="M:System.Web.Helpers.IAntiForgeryAdditionalDataProvider.GetAdditionalData(System.Web.HttpContextBase)">
      <summary>Fournit des données supplémentaires à stocker pour les jetons anti-contrefaçon générés au cours de cette demande.</summary>
      <returns>Données supplémentaires à incorporer dans le jeton anti-contrefaçon.</returns>
      <param name="context">Informations sur la demande actuelle.</param>
    </member>
    <member name="M:System.Web.Helpers.IAntiForgeryAdditionalDataProvider.ValidateAdditionalData(System.Web.HttpContextBase,System.String)">
      <summary>Valide les données supplémentaires incorporées dans le jeton anti-contrefaçon entrant.</summary>
      <returns>true si les données sont valides ; sinon, false.</returns>
      <param name="context">Informations sur la demande actuelle.</param>
      <param name="additionalData">Données supplémentaires incorporées dans le jeton.</param>
    </member>
    <member name="T:System.Web.Helpers.UnvalidatedRequestValues">
      <summary>Fournit un accès aux valeurs de formulaire non validées dans l'objet <see cref="T:System.Web.HttpRequest" />.</summary>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.Form">
      <summary>Obtient une collection de valeurs de formulaire non validées publiées à partir du navigateur.</summary>
      <returns>Collection non validée de valeurs de formulaire.</returns>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.Item(System.String)">
      <summary>Obtient l'objet non validé spécifié à partir de la collection de valeurs publiées dans l'objet <see cref="T:System.Web.HttpRequest" />.</summary>
      <returns>Membre spécifié ou valeur null si l'élément spécifié est introuvable.</returns>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.QueryString">
      <summary>Obtient une collection de valeurs de chaîne de requête non validées.</summary>
      <returns>Collection de valeurs de chaîne de requête non validées.</returns>
    </member>
    <member name="T:System.Web.Helpers.Validation">
      <summary>Exclut les champs de la recherche de balisage HTML et de script client potentiellement dangereux dans l'objet Request.</summary>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequest)">
      <summary>Retourne une version de valeurs de formulaire, de cookies et de variables de chaîne de requête sans y rechercher au préalable la présence de balisage HTML ou d'un script client.</summary>
      <returns>Objet qui contient les versions non validées du formulaire et des valeurs de chaîne de requête.</returns>
      <param name="request">Objet <see cref="T:System.Web.HttpRequest" /> qui contient les valeurs à exclure de la validation des demandes.</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequest,System.String)">
      <summary>Retourne une valeur du champ de formulaire, du cookie ou de la variable de chaîne de requête spécifié sans y rechercher au préalable la présence de balisage HTML ou d'un script client.</summary>
      <returns>Chaîne qui contient le texte non validé du champ, du cookie ou de la valeur de chaîne de requête spécifié.</returns>
      <param name="request">Objet <see cref="T:System.Web.HttpRequest" /> qui contient les valeurs à exclure de la validation.</param>
      <param name="key">Nom du champ à exclure de la validation.<paramref name="key" /> peut faire référence à un champ de formulaire, à un cookie ou à une variable de chaîne de requête.</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequestBase)">
      <summary>Retourne toutes les valeurs de l'objet Request (y compris les champs de formulaire, les cookies et la chaîne de requête) sans y rechercher au préalable la présence de balisage HTML ou d'un script client.</summary>
      <returns>Objet qui contient les versions non validées du formulaire, du cookie et des valeurs de chaîne de requête.</returns>
      <param name="request">Objet <see cref="T:System.Web.HttpRequest" /> qui contient les valeurs à exclure de la validation.</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequestBase,System.String)">
      <summary>Retourne la valeur spécifiée de l'objet Request sans y rechercher au préalable la présence de balisage HTML ou d'un script client.</summary>
      <returns>Chaîne qui contient le texte non validé du champ, du cookie ou de la valeur de chaîne de requête spécifié.</returns>
      <param name="request">Objet <see cref="T:System.Web.HttpRequestBase" /> qui contient les valeurs à exclure de la validation.</param>
      <param name="key">Nom du champ à exclure de la validation.<paramref name="key" /> peut faire référence à un champ de formulaire, à un cookie ou à une variable de chaîne de requête.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpAntiForgeryException">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.I	nitialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpAntiForgeryException" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code. I	nitialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpAntiForgeryException" />.</summary>
      <param name="message">Message contenant l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String,System.Exception)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code. I	nitialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpAntiForgeryException" />.</summary>
      <param name="message">Message.</param>
      <param name="innerException">Exception interne.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationEqualToRule">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationEqualToRule.#ctor(System.String,System.Object)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
      <param name="errorMessage">Message d'erreur.</param>
      <param name="other">Autre.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationMaxLengthRule"></member>
    <member name="M:System.Web.Mvc.ModelClientValidationMaxLengthRule.#ctor(System.String,System.Int32)"></member>
    <member name="T:System.Web.Mvc.ModelClientValidationMinLengthRule"></member>
    <member name="M:System.Web.Mvc.ModelClientValidationMinLengthRule.#ctor(System.String,System.Int32)"></member>
    <member name="T:System.Web.Mvc.ModelClientValidationRangeRule">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRangeRule.#ctor(System.String,System.Object,System.Object)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
      <param name="errorMessage">Message d'erreur.</param>
      <param name="minValue">Valeur minimale.</param>
      <param name="maxValue">Valeur maximale.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRegexRule">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRegexRule.#ctor(System.String,System.String)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code. I	nitialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelClientValidationRegexRule" />.</summary>
      <param name="errorMessage">Message d'exception.</param>
      <param name="pattern">Modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRemoteRule">
      <summary>Représente la règle distante pour la validation du client du modèle.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRemoteRule.#ctor(System.String,System.String,System.String,System.String)">
      <summary>I	nitialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelClientValidationRemoteRule" />.</summary>
      <param name="errorMessage">Message d'erreur.</param>
      <param name="url">URL de la règle.</param>
      <param name="httpMethod">Méthode HTTP.</param>
      <param name="additionalFields">Champs supplémentaires utilisés.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRequiredRule">
      <summary>Représente la règle requise pour la validation du client du modèle.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRequiredRule.#ctor(System.String)">
      <summary>I	nitialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelClientValidationRequiredRule" />.</summary>
      <param name="errorMessage">Message d'erreur </param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRule">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRule.#ctor">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ErrorMessage">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationParameters">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationType">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationStringLengthRule">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Représente la longueur de la règle de validation du client du modèle.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationStringLengthRule.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.I	nitialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelClientValidationStringLengthRule" />.</summary>
      <param name="errorMessage">Message d'erreur.</param>
      <param name="minimumLength">Longueur minimale de la règle de validation.</param>
      <param name="maximumLength">Longueur maximale de la règle de validation.</param>
    </member>
    <member name="T:System.Web.Mvc.TagBuilder">
      <summary>Contient les classes et propriétés qui permettent de créer des éléments HTML.Cette classe permet d'écrire des applications auxiliaires, telles que celles disponibles dans l'espace de noms <see cref="N:System.Web.Helpers" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.#ctor(System.String)">
      <summary>Crée une balise portant le nom de balise spécifié.</summary>
      <param name="tagName">Nom de la balise sans le séparateur « &lt; », « / » ou « &gt; ».</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tagName" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.AddCssClass(System.String)">
      <summary>Ajoute une classe CSS à la liste des classes CSS de la balise.</summary>
      <param name="value">Classe CSS à ajouter.</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.Attributes">
      <summary>Obtient la collection d'attributs.</summary>
      <returns>Collection d'attributs.</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.CreateSanitizedId(System.String)">
      <summary>Remplace chaque caractère non valide de l'ID de la balise par un caractère HTML valide.</summary>
      <returns>ID de balise expurgé ou valeur null si <paramref name="originalId" /> est null ou vide, ou si <paramref name="originalId" /> ne commence pas par une lettre.</returns>
      <param name="originalId">ID pouvant contenir les caractères à remplacer.</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.CreateSanitizedId(System.String,System.String)">
      <summary>Remplace chaque caractère non valide de l'ID de la balise par la chaîne de remplacement spécifiée.</summary>
      <returns>ID de balise expurgé ou valeur null si <paramref name="originalId" /> est null ou vide, ou si <paramref name="originalId" /> ne commence pas par une lettre.</returns>
      <param name="originalId">ID pouvant contenir les caractères à remplacer.</param>
      <param name="invalidCharReplacement">Chaîne de remplacement.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="invalidCharReplacement" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.GenerateId(System.String)">
      <summary>Génère l'attribut ID expurgé de la balise à l'aide du nom spécifié. </summary>
      <param name="name">Nom à utiliser pour générer un attribut ID.</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.IdAttributeDotReplacement">
      <summary>Obtient ou définit une chaîne qui permet de remplacer des caractères HTML non valides.</summary>
      <returns>Chaîne à utiliser pour remplacer les caractères HTML non valides.</returns>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.InnerHtml">
      <summary>Obtient ou définit la valeur HTML interne de l'élément.</summary>
      <returns>Valeur HTML interne de l'élément.</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttribute(System.String,System.String)">
      <summary>Ajoute un nouvel attribut à la balise.</summary>
      <param name="key">Clé de l'attribut.</param>
      <param name="value">Valeur de l'attribut.</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttribute(System.String,System.String,System.Boolean)">
      <summary>Ajoute un nouvel attribut ou remplace éventuellement un attribut existant dans la balise d'ouverture.</summary>
      <param name="key">Clé de l'attribut.</param>
      <param name="value">Valeur de l'attribut.</param>
      <param name="replaceExisting">true pour remplacer un attribut existant s'il existe un attribut qui inclut la valeur <paramref name="key" /> spécifiée ou false pour conserver l'attribut d'origine tel quel. </param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})">
      <summary>Ajoute de nouveaux attributs à la balise.</summary>
      <param name="attributes">Collection d'attributs à ajouter.</param>
      <typeparam name="TKey">Type de l'objet clé.</typeparam>
      <typeparam name="TValue">Type de l'objet valeur.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
      <summary>Ajoute de nouveaux attributs ou remplace éventuellement des attributs existants dans la balise.</summary>
      <param name="attributes">Collection d'attributs à ajouter ou remplacer.</param>
      <param name="replaceExisting">Pour chaque attribut dans <paramref name="attributes" />, true pour remplacer l'attribut si un attribut incluant la même clé existe déjà ou false pour conserver l'attribut d'origine tel quel.</param>
      <typeparam name="TKey">Type de l'objet clé.</typeparam>
      <typeparam name="TValue">Type de l'objet valeur.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.SetInnerText(System.String)">
      <summary>Définit la propriété <see cref="P:System.Web.Mvc.TagBuilder.InnerHtml" /> de l'élément sur une version HTML de la chaîne spécifiée.</summary>
      <param name="innerText">Chaîne à coder au format HTML.</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.TagName">
      <summary>Obtient le nom de cette balise.</summary>
      <returns>Nom.</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.ToString">
      <summary>Restitue l'élément en tant qu'élément <see cref="F:System.Web.Mvc.TagRenderMode.Normal" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.ToString(System.Web.Mvc.TagRenderMode)">
      <summary>Restitue la balise HTML à l'aide du mode de rendu spécifié.</summary>
      <returns>Balise HTML restituée.</returns>
      <param name="renderMode">Mode de rendu.</param>
    </member>
    <member name="T:System.Web.Mvc.TagRenderMode">
      <summary>Énumère les modes disponibles pour le rendu de balises HTML.</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.EndTag">
      <summary>Représente le mode de rendu d'une balise de fermeture (par exemple, &lt;/tag&gt;).</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.Normal">
      <summary>Représente le mode de rendu d'un texte normal.</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.SelfClosing">
      <summary>Représente le mode de rendu d'une balise de fermeture automatique (par exemple, &lt;tag /&gt;).</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.StartTag">
      <summary>Représente le mode de rendu d'une balise d'ouverture (par exemple, &lt;tag&gt;).</summary>
    </member>
    <member name="T:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator.GetValidationAttributes(System.Collections.Generic.IEnumerable{System.Web.Mvc.ModelClientValidationRule},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient les attributs de validation de la structure ou du contenu de <see cref="T:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator" />.</summary>
      <param name="clientRules">
        <see cref="T:System.Web.Mvc.ModelClientValidationRule" /> à implémenter.</param>
      <param name="results">Résultat de la validation.</param>
    </member>
    <member name="T:System.Web.WebPages.ApplicationPart">
      <summary>Contient les méthodes qui permettent d'inscrire les assemblys en tant que composants d'application.</summary>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.#ctor(System.Reflection.Assembly,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.ApplicationPart" /> à l'aide du chemin d'accès virtuel racine et de l'assembly spécifiés.</summary>
      <param name="assembly">Assembly.</param>
      <param name="rootVirtualPath">Chemin d'accès virtuel racine.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rootVirtualPath" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.ProcessVirtualPath(System.Reflection.Assembly,System.String,System.String)">
      <summary>Résout un chemin d'accès virtuel en tant que ressource ou assembly spécifié au sein d'un assembly à l'aide du chemin d'accès virtuel de base et du chemin d'accès virtuel spécifiés.</summary>
      <returns>Chemin d'accès de l'assembly ou de la ressource.</returns>
      <param name="assembly">Assembly.</param>
      <param name="baseVirtualPath">Chemin d'accès virtuel de base.</param>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="assembly" /> n'est pas inscrit.</exception>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.Register(System.Web.WebPages.ApplicationPart)">
      <summary>Ajoute un assembly et toutes les pages Web au sein de l'assembly à la liste des composants d'application disponibles.</summary>
      <param name="applicationPart">Composant d'application.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="applicationPart" /> est déjà inscrit.</exception>
    </member>
    <member name="T:System.Web.WebPages.ApplicationStartPage">
      <summary>Fournit les objets et méthodes qui permettent d'exécuter et de restituer les pages de démarrage des applications ASP.NET Web Pages (fichiers _AppStart.cshtml ou _AppStart.vbhtml).</summary>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.ApplicationStartPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Application">
      <summary>Obtient l'objet d'application HTTP qui fait référence à cette page de démarrage de l'application.</summary>
      <returns>Objet d'application HTTP qui fait référence à cette page de démarrage de l'application.</returns>
    </member>
    <member name="F:System.Web.WebPages.ApplicationStartPage.CacheKeyPrefix">
      <summary>Préfixe appliqué à toutes les clés ajoutées au cache par la page de démarrage de l'application.</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Context">
      <summary>Obtient l'objet <see cref="T:System.Web.HttpContextBase" /> qui représente les données de contexte associées à cette page.</summary>
      <returns>Données de contexte actuelles.</returns>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.GetOutputWriter">
      <summary>Retourne l'instance TextWriter qui permet de restituer la page.</summary>
      <returns>TextWriter.</returns>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Markup">
      <summary>Obtient la sortie de la page de démarrage de l'application en tant que chaîne codée au format HTML.</summary>
      <returns>Sortie de la page de démarrage de l'application en tant que chaîne codée au format HTML.</returns>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Output">
      <summary>Obtient le TextWriter pour la page.</summary>
      <returns>TextWriter pour la page.</returns>
    </member>
    <member name="F:System.Web.WebPages.ApplicationStartPage.StartPageVirtualPath">
      <summary>Chemin d'accès à la page de démarrage de l'application.</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.VirtualPath">
      <summary>Obtient ou définit le chemin d'accès virtuel de la page.</summary>
      <returns>Chemin d'accès virtuel.</returns>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.Write(System.Object)">
      <summary>Écrit la représentation sous forme de chaîne de l'objet spécifié en tant que chaîne codée au format HTML.</summary>
      <param name="value">Objet à encoder et à écrire.</param>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.Write(System.Web.WebPages.HelperResult)">
      <summary>Écrit l'objet spécifié <see cref="T:System.Web.WebPages.HelperResult" /> en tant que chaîne codée au format HTML.</summary>
      <param name="result">Résultat d'application auxiliaire à encoder et à écrire.</param>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.WriteLiteral(System.Object)">
      <summary>Écrit l'objet spécifié sans codage HTML.</summary>
      <param name="value">Objet à écrire.</param>
    </member>
    <member name="T:System.Web.WebPages.AttributeValue">
      <summary>Stocke la valeur pour un attribut.Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.#ctor(System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.Object},System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.AttributeValue" />.Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
      <param name="prefix">Préfixe de l'espace de nom pour l'attribut.</param>
      <param name="value">Valeur de l'attribut.</param>
      <param name="literal">true s'il s'agit d'une valeur littérale ; sinon, false.</param>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.FromTuple(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.Object,System.Int32},System.Boolean})">
      <summary>Crée une valeur d'attribut à partir de l'objet tuple spécifié.</summary>
      <returns>Valeur de l'attribut créé.</returns>
      <param name="value">Objet tuple à partir duquel créer la valeur.</param>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.FromTuple(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.String,System.Int32},System.Boolean})">
      <summary>Crée une valeur d'attribut à partir de l'objet tuple spécifié.</summary>
      <returns>Valeur de l'attribut créé.</returns>
      <param name="value">Objet tuple à partir duquel créer la valeur.</param>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Literal">
      <summary>Obtient ou définit une valeur qui indique si la valeur est une valeur littérale.Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
      <returns>true s'il s'agit d'une valeur littérale ; sinon, false.</returns>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.op_Implicit(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.Object,System.Int32},System.Boolean})~System.Web.WebPages.AttributeValue">
      <summary>Crée une valeur d'attribut à partir de l'objet tuple spécifié.</summary>
      <returns>Valeur de l'attribut créé.</returns>
      <param name="value">Objet tuple à partir duquel créer la valeur.</param>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.op_Implicit(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.String,System.Int32},System.Boolean})~System.Web.WebPages.AttributeValue">
      <summary>Crée une valeur d'attribut à partir de l'objet tuple spécifié.</summary>
      <returns>Valeur de l'attribut créé.</returns>
      <param name="value">Objet tuple à partir duquel créer la valeur.</param>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Prefix">
      <summary>Obtient ou définit le préfixe de l'espace de noms pour l'attribut.Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
      <returns>Préfixe de l'espace de nom pour l'attribut.</returns>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Value">
      <summary>Obtient ou définit la valeur de l'attribut.Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
      <returns>Valeur de l'attribut.</returns>
    </member>
    <member name="T:System.Web.WebPages.BrowserHelpers">
      <summary>Permet de spécifier des informations de navigateur (agent utilisateur) personnalisées.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.ClearOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>Supprime tout agent utilisateur substitué pour la demande actuelle.</summary>
      <param name="httpContext">Contexte actuel.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>Retourne l'objet fonctionnalités du navigateur pour les fonctionnalités de navigateur substituées ou pour le navigateur réel si aucune substitution n'a été spécifiée.</summary>
      <returns>Fonctionnalités du navigateur.</returns>
      <param name="httpContext">Contexte actuel.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>Retourne la valeur d'agent utilisateur substituée ou la chaîne d'agent utilisateur réelle si aucune substitution n'a été spécifiée.</summary>
      <returns>Chaîne d'agent utilisateur</returns>
      <param name="httpContext">Contexte actuel.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetVaryByCustomStringForOverriddenBrowser(System.Web.HttpContext)">
      <summary>Obtient une chaîne qui varie en fonction du type de navigateur.</summary>
      <returns>Chaîne qui identifie le navigateur.</returns>
      <param name="httpContext">Contexte actuel.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetVaryByCustomStringForOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>Obtient une chaîne qui varie en fonction du type de navigateur. </summary>
      <returns>Chaîne qui identifie le navigateur.</returns>
      <param name="httpContext">Base de contexte actuelle.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.String)">
      <summary>Substitue la valeur d'agent utilisateur réelle de la demande à l'aide de l'agent utilisateur spécifié.</summary>
      <param name="httpContext">Contexte actuel.</param>
      <param name="userAgent">Agent utilisateur à utiliser.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.Web.WebPages.BrowserOverride)">
      <summary>Substitue la valeur d'agent utilisateur réelle de la demande à l'aide des informations de substitution de navigateur spécifiées.</summary>
      <param name="httpContext">Contexte actuel.</param>
      <param name="browserOverride">Une des valeurs d'énumération qui représente les informations de substitution de navigateur à utiliser.</param>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverride">
      <summary>	Spécifie les types de navigateurs qui peuvent être définis pour la méthode <see cref="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.Web.WebPages.BrowserOverride)" />.</summary>
    </member>
    <member name="F:System.Web.WebPages.BrowserOverride.Desktop">
      <summary>Spécifie un navigateur.</summary>
    </member>
    <member name="F:System.Web.WebPages.BrowserOverride.Mobile">
      <summary>Spécifie un navigateur mobile.</summary>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverrideStore">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Le BrowserOverrideStore actuel est utilisé pour obtenir et définir l'agent utilisateur d'une requête.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.#ctor">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.BrowserOverrideStore" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Recherche un agent utilisateur en interrogeant le cookie de substitution dans le navigateur.</summary>
      <returns>Agent utilisateur.</returns>
      <param name="httpContext">Contexte HTTP.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.SetOverriddenUserAgent(System.Web.HttpContextBase,System.String)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Ajoute un cookie de substitution dans le navigateur avec l'agent utilisateur pour répondre à la requête en cours.</summary>
      <param name="httpContext">Contexte HTTP.</param>
      <param name="userAgent">Agent utilisateur.</param>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverrideStores">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStores.#ctor">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="P:System.Web.WebPages.BrowserOverrideStores.Current">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="T:System.Web.WebPages.CookieBrowserOverrideStore">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient un agent utilisateur substitué pour une requête à partir d'un cookie.Crée un cookie d'après l'agent utilisateur substitué.</summary>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.#ctor">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.CookieBrowserOverrideStore" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.#ctor(System.Int32)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.CookieBrowserOverrideStore" />.</summary>
      <param name="daysToExpire">Nombre de jours avant expiration.</param>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Recherche un agent utilisateur en interrogeant le cookie de substitution dans le navigateur.</summary>
      <returns>Agent utilisateur.</returns>
      <param name="httpContext">Contexte HTTP.</param>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.SetOverriddenUserAgent(System.Web.HttpContextBase,System.String)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Ajoute un cookie de substitution dans le navigateur avec l'agent utilisateur pour répondre à la requête en cours.</summary>
      <param name="httpContext">Contexte HTTP.</param>
      <param name="userAgent">Agent utilisateur.</param>
    </member>
    <member name="T:System.Web.WebPages.DefaultDisplayMode">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Représente le mode d'affichage par défaut des pages Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.#ctor">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.DefaultDisplayMode" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.#ctor(System.String)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.DefaultDisplayMode" />.</summary>
      <param name="suffix">Le suffixe.</param>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.CanHandleContext(System.Web.HttpContextBase)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Indique une valeur si <see cref="T:System.Web.HttpContextBase" /> peut gérer le contexte.</summary>
      <returns>true si le <see cref="T:System.Web.HttpContextBase" /> peut gérer le context ; sinon, false.</returns>
      <param name="httpContext">Le contexte HTTP spécifié.</param>
    </member>
    <member name="P:System.Web.WebPages.DefaultDisplayMode.ContextCondition">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient ou définit une valeur si la condition contextuelle affiche un mode par défaut.</summary>
      <returns>true si la condition contextuelle a été annulée ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.DefaultDisplayMode.DisplayModeId">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient l'identificateur du mode d'affichage des pages Web.</summary>
      <returns>Identificateur du mode d'affichage des pages Web.</returns>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.GetDisplayInfo(System.Web.HttpContextBase,System.String,System.Func{System.String,System.Boolean})">
      <summary>Extrait les informations d'affichage d'un élément dans le volet des résultats.</summary>
      <returns>Les informations d'affichage d'un élément dans le volet des résultats.</returns>
      <param name="httpContext">Contexte HTTP.</param>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
      <param name="virtualPathExists">true si le chemin d'accès virtuel existe ; sinon, false.</param>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.TransformPath(System.String,System.String)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Transforme le chemin d'accès du mode d'affichage.</summary>
      <returns>Le chemin d'accès du mode d'affichage à transformer.</returns>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
      <param name="suffix">Le suffixe.</param>
    </member>
    <member name="T:System.Web.WebPages.DisplayInfo">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Représente informations d'affichage d'une propriété.</summary>
    </member>
    <member name="M:System.Web.WebPages.DisplayInfo.#ctor(System.String,System.Web.WebPages.IDisplayMode)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.DisplayInfo" />.</summary>
      <param name="filePath">Chemin d'accès virtuel.</param>
      <param name="displayMode">Mode d'affichage actif.</param>
    </member>
    <member name="P:System.Web.WebPages.DisplayInfo.DisplayMode">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient le mode d'affichage actif pour une page Web.</summary>
      <returns>Mode d'affichage actif pour une page Web.</returns>
    </member>
    <member name="P:System.Web.WebPages.DisplayInfo.FilePath">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient le chemin d'accès virtuel de la page Web actuelle.</summary>
      <returns>Chemin d'accès virtuel de la page Web actuelle.</returns>
    </member>
    <member name="T:System.Web.WebPages.DisplayModeProvider">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Représente les modes d'affichage du fournisseur.</summary>
    </member>
    <member name="F:System.Web.WebPages.DisplayModeProvider.DefaultDisplayModeId">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Définit l'identificateur du mode d'affichage par défaut.</summary>
    </member>
    <member name="M:System.Web.WebPages.DisplayModeProvider.GetAvailableDisplayModesForContext(System.Web.HttpContextBase,System.Web.WebPages.IDisplayMode)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient la liste des modes d'affichage disponibles pour la base de contexte.</summary>
      <returns>Liste des modes d'affichage disponibles pour la base de contexte.</returns>
      <param name="httpContext">Base du contexte HTTP.</param>
      <param name="currentDisplayMode">Mode d'affichage actif.</param>
    </member>
    <member name="M:System.Web.WebPages.DisplayModeProvider.GetDisplayInfoForVirtualPath(System.String,System.Web.HttpContextBase,System.Func{System.String,System.Boolean},System.Web.WebPages.IDisplayMode)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient le <see cref="T:System.Web.WebPages.DisplayInfo" /> pour le chemin d'accès virtuel.</summary>
      <returns>Chemin d'accès virtuel <see cref="T:System.Web.WebPages.DisplayInfo" />.</returns>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
      <param name="httpContext">Base du contexte HTTP.</param>
      <param name="virtualPathExists">true si le chemin d'accès virtuel existe ; sinon, false.</param>
      <param name="currentDisplayMode">Mode d'affichage actif.</param>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.Instance">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient l'instance de <see cref="T:System.Web.WebPages.DisplayModeProvider" />.</summary>
      <returns>Instance de <see cref="T:System.Web.WebPages.DisplayModeProvider" />.</returns>
    </member>
    <member name="F:System.Web.WebPages.DisplayModeProvider.MobileDisplayModeId">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Définit l'identificateur du mode d'affichage mobile.</summary>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.Modes">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient la liste des modes de <see cref="T:System.Web.WebPages.DisplayModeProvider" />.</summary>
      <returns>Liste des modes de <see cref="T:System.Web.WebPages.DisplayModeProvider" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.RequireConsistentDisplayMode">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient ou définit une valeur qui indique si la page Web requiert un mode d'affichage cohérent.</summary>
      <returns>true si la page Web requiert un mode d'affichage cohérent ; sinon, false.</returns>
    </member>
    <member name="T:System.Web.WebPages.HelperPage">
      <summary>Représente une classe de base pour les pages, qui est utilisée lorsqu'ASP.NET compile un fichier .cshtml ou .vbhtml et qui expose les propriétés et méthodes au niveau de la page et de l'application.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.#ctor">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.HelperPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.App">
      <summary>	Obtient les données d'état de l'application en tant qu'objet <see cref="T:System.Dynamic.DynamicObject" /> que les appelants peuvent utiliser pour créer des propriétés à portée d'application personnalisées et accéder à celles-ci.</summary>
      <returns>Données d'état de l'application.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.AppState">
      <summary>Obtient une référence à des données d'état d'application globales qui peuvent être partagées par plusieurs sessions et demandes dans une application ASP.NET.</summary>
      <returns>Données d'état de l'application.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.BeginContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Met toutes les instructions d'assistance dans le contexte de la page d'assistance.</summary>
      <param name="writer">TextWriter.</param>
      <param name="virtualPath">Chemin d'accès virtuel d'assistance.</param>
      <param name="startPosition">Position de départ.</param>
      <param name="length">Longueur du contexte.</param>
      <param name="isLiteral">true si le contexte a un attribut de type littéral ; sinon, false.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.BeginContext(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Met toutes les instructions d'assistance dans le contexte de la page d'assistance.</summary>
      <param name="virtualPath">Chemin d'accès virtuel d'assistance.</param>
      <param name="startPosition">Position de départ.</param>
      <param name="length">Longueur du contexte.</param>
      <param name="isLiteral">true si le contexte a un attribut de type littéral ; sinon, false.</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Cache">
      <summary>Obtient l'objet cache pour le domaine d'application actuel.</summary>
      <returns>Objet cache.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Context">
      <summary>Obtient l'objet <see cref="T:System.Web.HttpContextBase" /> associé à une page.</summary>
      <returns>Données de contexte actuelles.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.CurrentPage">
      <summary>Obtient la page actuelle de cette page d'application auxiliaire.</summary>
      <returns>Page actuelle.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.EndContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Indique la fin du bloc de contexte.</summary>
      <param name="writer">TextWriter.</param>
      <param name="virtualPath">Chemin d'accès virtuel d'assistance.</param>
      <param name="startPosition">Position de départ.</param>
      <param name="length">Longueur du contexte.</param>
      <param name="isLiteral">true si le contexte a un attribut de type littéral ; sinon, false.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.EndContext(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Indique la fin du bloc de contexte.</summary>
      <param name="virtualPath">Chemin d'accès virtuel d'assistance.</param>
      <param name="startPosition">Position de départ.</param>
      <param name="length">Longueur du contexte.</param>
      <param name="isLiteral">true si le contexte a un attribut de type littéral ; sinon, false.</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.HelperVirtualPath">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient ou définit le chemin d'accès de la page d'assistance.</summary>
      <returns>Chemin d'accès de la page d'assistance.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.Href(System.String,System.Object[])">
      <summary>Crée une URL absolue à partir d'une URL relative à une application à l'aide des paramètres spécifiés.</summary>
      <returns>URL absolue.</returns>
      <param name="path">Chemin d'accès initial à utiliser dans l'URL.</param>
      <param name="pathParts">Informations de chemin d'accès supplémentaires, telles que les dossiers et sous-dossiers.</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Html">
      <summary>Obtient l'objet <see cref="T:System.Web.WebPages.Html.HtmlHelper" /> associé à une page.</summary>
      <returns>Objet qui prend en charge le rendu des contrôles de formulaire HTML dans une page.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.IsAjax">
      <summary>Obtient une valeur qui indique si Ajax est utilisé au cours de la demande de la page Web.</summary>
      <returns>true si Ajax est utilisé au cours de la demande ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.IsPost">
      <summary>Obtient une valeur qui indique si la demande actuelle est une demande POST (envoyée à l'aide du verbe HTTP POST).</summary>
      <returns>true si le verbe HTTP est POST ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Model">
      <summary>Obtient le modèle associé à une page.</summary>
      <returns>Objet qui représente un modèle associé aux données de vue d'une page.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.ModelState">
      <summary>Obtient les données d'état du modèle associé à une page.</summary>
      <returns>État du modèle.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Page">
      <summary>Obtient un accès qui utilise les propriétés aux données de page partagées entre les pages, les pages de disposition et les pages partielles.</summary>
      <returns>Objet qui contient les données de page.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.PageContext">
      <summary>Obtient et définit le contexte HTTP de la page Web.</summary>
      <returns>Contexte HTTP de la page Web.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.PageData">
      <summary>Obtient un accès de type tableau aux données de page partagées entre les pages, les pages de disposition et les pages partielles.</summary>
      <returns>Objet qui fournit un accès de type tableau aux données de page.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Request">
      <summary>Obtient l'objet <see cref="T:System.Web.HttpRequest" /> pour la requête HTTP actuelle.</summary>
      <returns>Objet <see cref="T:System.Web.HttpRequest" /> contenant les valeurs HTTP envoyées par un client lors d'une requête Web.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Response">
      <summary>Obtient l'objet <see cref="T:System.Web.HttpResponse" /> pour la réponse HTTP actuelle.</summary>
      <returns>Objet <see cref="T:System.Web.HttpResponse" /> qui contient les informations de réponse HTTP à partir d'une opération ASP.NET.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Server">
      <summary>Obtient l'objet <see cref="T:System.Web.HttpServerUtility" /> qui fournit les méthodes qui peuvent être utilisées dans le cadre du traitement des pages Web.</summary>
      <returns>Objet <see cref="T:System.Web.HttpServerUtility" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Session">
      <summary>Obtient l'objet <see cref="T:System.Web.HttpSessionState" /> pour la requête HTTP actuelle.</summary>
      <returns>Objet <see cref="T:System.Web.HttpSessionState" /> pour la requête HTTP actuelle.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.UrlData">
      <summary>Obtient les données associées au chemin URL.</summary>
      <returns>Données associées au chemin URL.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.User">
      <summary>Obtient une valeur utilisateur basée sur le contexte HTTP.</summary>
      <returns>Valeur utilisateur basée sur le contexte HTTP.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.VirtualPath">
      <summary>Obtient le chemin d'accès virtuel de la page.</summary>
      <returns>Chemin d'accès virtuel.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteAttributeTo(System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Écrit un attribut associé au programme d'assistance.</summary>
      <param name="writer">TextWriter.</param>
      <param name="name">Nom de l'attribut.</param>
      <param name="prefix">Préfixe.</param>
      <param name="suffix">Le suffixe.</param>
      <param name="values">Valeur de l'attribut.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteLiteralTo(System.IO.TextWriter,System.Object)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Écrit un objet de type littéral dans l'application d'assistance.</summary>
      <param name="writer">TextWriter.</param>
      <param name="value">Valeur de l'objet.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteLiteralTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Écrit un objet de résultat de l'application d'assistance dans l'application d'assistance.</summary>
      <param name="writer">TextWriter</param>
      <param name="value">Résultat de l'application d'assistance.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteTo(System.IO.TextWriter,System.Object)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Ajoute un objet dans l'application d'assistance.</summary>
      <param name="writer">TextWriter.</param>
      <param name="value">Valeur de l'objet.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Écrit un objet de résultat de l'application d'assistance dans l'application d'assistance.</summary>
      <param name="writer">TextWriter.</param>
      <param name="value">Valeur du résultat de l'application d'assistance.</param>
    </member>
    <member name="T:System.Web.WebPages.HelperResult">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.#ctor(System.Action{System.IO.TextWriter})">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.ToHtmlString">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.ToString">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.WriteTo(System.IO.TextWriter)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="T:System.Web.WebPages.HttpContextExtensions">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.WebPages.HttpContextExtensions.RedirectLocal(System.Web.HttpContextBase,System.String)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.WebPages.HttpContextExtensions.RegisterForDispose(System.Web.HttpContextBase,System.IDisposable)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="T:System.Web.WebPages.IDisplayMode">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Représente l'interface du mode d'affichage des pages Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.IDisplayMode.CanHandleContext(System.Web.HttpContextBase)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Fournit une valeur qui indique si les pages Web peuvent gérer un contexte HTTP.</summary>
      <returns>true si les pages Web peuvent gérer un contexte HTTP ; sinon, false.</returns>
      <param name="httpContext">Contexte HTTP.</param>
    </member>
    <member name="P:System.Web.WebPages.IDisplayMode.DisplayModeId">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient l'identificateur du mode d'affichage des pages Web.</summary>
      <returns>ID du mode d'affichage des pages Web.</returns>
    </member>
    <member name="M:System.Web.WebPages.IDisplayMode.GetDisplayInfo(System.Web.HttpContextBase,System.String,System.Func{System.String,System.Boolean})">
      <summary>Retourne cette méthode pour afficher toutes les informations relatives aux pages Web.</summary>
      <returns>Méthode pour afficher toutes les informations relatives aux pages Web.</returns>
      <param name="httpContext">Contexte HTTP.</param>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
      <param name="virtualPathExists">true si le chemin d'accès virtuel existe ; sinon, false.</param>
    </member>
    <member name="T:System.Web.WebPages.ITemplateFile">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="P:System.Web.WebPages.ITemplateFile.TemplateInfo">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="T:System.Web.WebPages.IValidator">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Définit les propriétés et méthodes pour les objets qui interviennent dans la page Web.</summary>
    </member>
    <member name="P:System.Web.WebPages.IValidator.ClientValidationRule">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient un conteneur pour la validation côté client concernant le champ obligatoire.</summary>
      <returns>Conteneur pour la validation côté client concernant le champ obligatoire.</returns>
    </member>
    <member name="M:System.Web.WebPages.IValidator.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Évalue la condition qui vérifie et met à jour le contexte de validation.</summary>
      <returns>Condition qui vérifie et met à jour le contexte de validation.</returns>
      <param name="validationContext">Contexte de validation.</param>
    </member>
    <member name="T:System.Web.WebPages.IVirtualPathFactory">
      <summary>Définit les méthodes qui sont implémentées par les fabriques de gestionnaires de chemins d'accès virtuels.</summary>
    </member>
    <member name="M:System.Web.WebPages.IVirtualPathFactory.CreateInstance(System.String)">
      <summary>Crée une fabrique de gestionnaires pour le chemin d'accès virtuel spécifié.</summary>
      <returns>Fabrique de gestionnaires pour le chemin d'accès virtuel spécifié.</returns>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
    </member>
    <member name="M:System.Web.WebPages.IVirtualPathFactory.Exists(System.String)">
      <summary>Détermine si le chemin d'accès virtuel spécifié est associé à une fabrique de gestionnaires.</summary>
      <returns>true si la fabrique de gestionnaires existe pour le chemin d'accès virtuel spécifié ; sinon, false.</returns>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
    </member>
    <member name="T:System.Web.WebPages.IWebPageRequestExecutor">
      <summary>Définit les méthodes qui permettent d'implémenter une classe d'exécuteur qui peut exécuter le code sur une page Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.IWebPageRequestExecutor.Execute(System.Web.WebPages.WebPage)">
      <summary>Exécute le code sur la page Web spécifiée.</summary>
      <returns>true si l'exécuteur a pris le contrôle sur l'exécution de la page Web ; sinon, false.</returns>
      <param name="page">Page Web.</param>
    </member>
    <member name="T:System.Web.WebPages.PageVirtualPathAttribute">
      <summary>Représente un attribut path pour une classe de page Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.PageVirtualPathAttribute.#ctor(System.String)">
      <summary>I	nitialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.PageVirtualPathAttribute" /> à l'aide du chemin d'accès virtuel spécifié.</summary>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
    </member>
    <member name="P:System.Web.WebPages.PageVirtualPathAttribute.VirtualPath">
      <summary>Obtient le chemin d'accès virtuel de la page Web actuelle.</summary>
      <returns>Chemin d'accès virtuel.</returns>
    </member>
    <member name="T:System.Web.WebPages.PreApplicationStartCode">
      <summary>Fournit un point de référence pour le code de pré-démarrage de l'application pour les pages Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.PreApplicationStartCode.Start">
      <summary>Inscrit le code de pré-démarrage de l'application pour les pages Web.</summary>
    </member>
    <member name="T:System.Web.WebPages.RequestExtensions">
      <summary>Définit les méthodes d'extension pour la classe <see cref="T:System.Web.HttpRequestBase" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.RequestExtensions.IsUrlLocalToHost(System.Web.HttpRequestBase,System.String)">
      <summary>Détermine si l'URL spécifiée fait référence à l'ordinateur local.</summary>
      <returns>true si l'URL spécifiée fait référence à l'ordinateur local ; sinon, false.</returns>
      <param name="request">Objet de requête HTTP.</param>
      <param name="url">URL à tester.</param>
    </member>
    <member name="T:System.Web.WebPages.RequestFieldValidatorBase">
      <summary>Sert de classe de base abstraite pour les classes de l'application auxiliaire de validation.</summary>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe dérivée et spécifie le nom de l'élément HTML en cours de validation.</summary>
      <param name="errorMessage">Nom (valeur de l'attribut name) de l'élément d'entrée utilisateur à valider.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.#ctor(System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe dérivée, enregistre la chaîne spécifiée en tant que message d'erreur à afficher si aucune valeur n'est fournie et spécifie si la méthode peut utiliser des données non validées.</summary>
      <param name="errorMessage">Message d'erreur.</param>
      <param name="useUnvalidatedValues">true pour utiliser l'entrée utilisateur non validée ; false pour refuser les données non validées.Ce paramètre est défini sur la valeur true en appelant des méthodes lorsque la valeur réelle de l'entrée utilisateur n'est pas importante, par exemple pour les champs obligatoires.</param>
    </member>
    <member name="P:System.Web.WebPages.RequestFieldValidatorBase.ClientValidationRule">
      <summary>En cas d'implémentation dans une classe dérivée, obtient un conteneur pour la validation côté client pour le champ obligatoire.</summary>
      <returns>Conteneur.</returns>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.GetHttpContext(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Retourne le contexte HTTP de la demande actuelle.</summary>
      <returns>Contexte.</returns>
      <param name="validationContext">Contexte de validation.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.GetRequestValue(System.Web.HttpRequestBase,System.String)">
      <summary>Retourne la valeur à valider.</summary>
      <returns>Valeur à valider.</returns>
      <param name="request">Demande actuelle.</param>
      <param name="field">Nom du champ de la demande actuelle à valider.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.IsValid(System.Web.HttpContextBase,System.String)">
      <summary>Retourne une valeur qui indique si la valeur spécifiée est valide.</summary>
      <returns>true si la valeur est valide ; sinon, false.</returns>
      <param name="httpContext">Contexte actuel.</param>
      <param name="value">Valeur à valider.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Exécute le test de validation.</summary>
      <returns>Résultat du test de validation.</returns>
      <param name="validationContext">Contexte.</param>
    </member>
    <member name="T:System.Web.WebPages.ResponseExtensions">
      <summary>Définit les méthodes d'extension pour la classe de base <see cref="T:System.Web.HttpResponseBase" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.OutputCache(System.Web.HttpResponseBase,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Web.HttpCacheability)">
      <summary>Configure la stratégie de cache d'une instance de réponse HTTP.</summary>
      <param name="response">Instance de réponse HTTP.</param>
      <param name="numberOfSeconds">Durée, en secondes, avant l'expiration des éléments du cache.</param>
      <param name="sliding">true pour indiquer que les éléments expirent du cache sur une base décalée ; false pour indiquer que les éléments expirent lorsqu'ils atteignent l'heure d'expiration prédéfinie.</param>
      <param name="varyByParams">Liste de tous les paramètres pouvant être reçus par une opération GET ou POST affectant la mise en cache.</param>
      <param name="varyByHeaders">Liste de tous les en-têtes HTTP affectant la mise en cache.</param>
      <param name="varyByContentEncodings">Liste de tous les en-têtes Content-Encoding affectant la mise en cache.</param>
      <param name="cacheability">Une des valeurs d'énumération qui spécifie le mode de mise en cache des éléments.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.SetStatus(System.Web.HttpResponseBase,System.Int32)">
      <summary>Définit le code d'état HTTP d'une réponse HTTP à l'aide de la valeur entière spécifiée.</summary>
      <param name="response">Instance de réponse HTTP.</param>
      <param name="httpStatusCode">Code d'état HTTP.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.SetStatus(System.Web.HttpResponseBase,System.Net.HttpStatusCode)">
      <summary>Définit le code d'état HTTP d'une réponse HTTP à l'aide de la valeur d'énumération de code d'état spécifiée.</summary>
      <param name="response">Instance de réponse HTTP.</param>
      <param name="httpStatusCode">Code d'état HTTP</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.WriteBinary(System.Web.HttpResponseBase,System.Byte[])">
      <summary>Écrit une séquence d'octets qui représentent le contenu binaire d'un type non spécifié vers le flux de sortie d'une réponse HTTP.</summary>
      <param name="response">Instance de réponse HTTP.</param>
      <param name="data">Tableau contenant les octets à écrire.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.WriteBinary(System.Web.HttpResponseBase,System.Byte[],System.String)">
      <summary>Écrit une séquence d'octets qui représentent le contenu binaire du type MIME spécifié vers le flux de sortie d'une réponse HTTP.</summary>
      <param name="response">Instance de réponse HTTP réceptrice.</param>
      <param name="data">Tableau contenant les octets à écrire.</param>
      <param name="mimeType">Type MIME du contenu binaire.</param>
    </member>
    <member name="T:System.Web.WebPages.SectionWriter">
      <summary>Fournit un délégué qui représente une ou plusieurs méthodes appelées lors de l'écriture d'une section de contenu.</summary>
    </member>
    <member name="T:System.Web.WebPages.StartPage">
      <summary>Fournit les méthodes et propriétés qui permettent de restituer les pages de démarrage qui utilisent le moteur de vue Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.StartPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.StartPage.ChildPage">
      <summary>Obtient ou définit la page enfant de la page de démarrage actuelle.</summary>
      <returns>Page enfant de la page de démarrage actuelle.</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Context">
      <summary>Obtient ou définit le contexte de la page <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
      <returns>Contexte de la page <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.ExecutePageHierarchy">
      <summary>Appelle les méthodes qui permettent d'exécuter le code écrit par les développeurs dans la page de démarrage _PageStart et dans la page <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.GetOutputWriter">
      <summary>Retourne l'instance TextWriter qui permet de restituer la page.</summary>
      <returns>TextWriter.</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.GetStartPage(System.Web.WebPages.WebPageRenderingBase,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Retourne une page d'initialisation pour la page spécifiée.</summary>
      <returns>Page _AppStart si celle-ci existe.Si la page _AppStart est introuvable, retourne la page _PageStart si celle-ci existe.Si les pages _AppStart et _PageStart sont introuvables, retourne <paramref name="page" />.</returns>
      <param name="page">Page.</param>
      <param name="fileName">Nom de fichier de la page.</param>
      <param name="supportedExtensions">Collection d'extensions de noms de fichiers pouvant contenir la syntaxe ASP.NET Razor, telles que « cshtml » et « vbhtml ».</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> ou <paramref name="fileName" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="supportedExtensions" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Layout">
      <summary>Obtient ou définit le chemin d'accès de la page de disposition pour la page <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
      <returns>Chemin d'accès de la page de disposition pour la page <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Page">
      <summary>Obtient un accès qui utilise les propriétés aux données de page <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> partagées entre les pages, les pages de disposition et les pages partielles.</summary>
      <returns>Objet qui contient les données de page <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.PageData">
      <summary>Obtient un accès de type tableau aux données de page <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> partagées entre les pages, les pages de disposition et les pages partielles.</summary>
      <returns>Objet qui fournit un accès de type tableau aux données de page <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.RenderPage(System.String,System.Object[])">
      <summary>Restitue la page <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
      <returns>Balisage HTML qui représente la page Web.</returns>
      <param name="path">Chemin d'accès de la page à restituer.</param>
      <param name="data">Données supplémentaires permettant de restituer la page.</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.RunPage">
      <summary>Exécute le code écrit par les développeurs dans la page <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.Write(System.Object)">
      <summary>Écrit la représentation sous forme de chaîne de l'objet spécifié en tant que chaîne codée au format HTML.</summary>
      <param name="value">Objet à encoder et à écrire.</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.Write(System.Web.WebPages.HelperResult)">
      <summary>Écrit la représentation sous forme de chaîne de l'objet <see cref="T:System.Web.WebPages.HelperResult" /> spécifié en tant que chaîne codée au format HTML.</summary>
      <param name="result">Résultat d'application auxiliaire à encoder et à écrire.</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.WriteLiteral(System.Object)">
      <summary>Écrit la représentation sous forme de chaîne de l'objet spécifié sans codage HTML.</summary>
      <param name="value">Objet à écrire.</param>
    </member>
    <member name="T:System.Web.WebPages.StringExtensions">
      <summary>Fournit des méthodes utilitaires pour la conversion des valeurs de chaîne en d'autres types de données.</summary>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.As``1(System.String)">
      <summary>Convertit une chaîne en valeur fortement typée du type de données spécifié.</summary>
      <returns>Valeur convertie.</returns>
      <param name="value">Valeur à convertir.</param>
      <typeparam name="TValue">Type de données vers lequel effectuer la conversion.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.As``1(System.String,``0)">
      <summary>Convertit une chaîne vers le type de données spécifié et spécifie une valeur par défaut.</summary>
      <returns>Valeur convertie.</returns>
      <param name="value">Valeur à convertir.</param>
      <param name="defaultValue">Valeur à retourner si <paramref name="value" /> a la valeur null.</param>
      <typeparam name="TValue">Type de données vers lequel effectuer la conversion.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsBool(System.String)">
      <summary>Convertit une chaîne en valeur booléenne (true/false).</summary>
      <returns>Valeur convertie.</returns>
      <param name="value">Valeur à convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsBool(System.String,System.Boolean)">
      <summary>Convertit une chaîne en valeur booléenne (true/false) et spécifie une valeur par défaut.</summary>
      <returns>Valeur convertie.</returns>
      <param name="value">Valeur à convertir.</param>
      <param name="defaultValue">Valeur à retourner si <paramref name="value" /> a la valeur null ou est une valeur non valide.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDateTime(System.String)">
      <summary>Convertit une chaîne en valeur <see cref="T:System.DateTime" />.</summary>
      <returns>Valeur convertie.</returns>
      <param name="value">Valeur à convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDateTime(System.String,System.DateTime)">
      <summary>Convertit une chaîne en valeur <see cref="T:System.DateTime" /> et spécifie une valeur par défaut.</summary>
      <returns>Valeur convertie.</returns>
      <param name="value">Valeur à convertir.</param>
      <param name="defaultValue">Valeur à retourner si <paramref name="value" /> a la valeur null ou est une valeur non valide.La valeur par défaut est la valeur de temps minimale du système.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDecimal(System.String)">
      <summary>Convertit une chaîne en nombre <see cref="T:System.Decimal" />.</summary>
      <returns>Valeur convertie.</returns>
      <param name="value">Valeur à convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDecimal(System.String,System.Decimal)">
      <summary>Convertit une chaîne en nombre <see cref="T:System.Decimal" /> et spécifie une valeur par défaut.</summary>
      <returns>Valeur convertie.</returns>
      <param name="value">Valeur à convertir.</param>
      <param name="defaultValue">Valeur à retourner si <paramref name="value" /> a la valeur null ou est non valide.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsFloat(System.String)">
      <summary>Convertit une chaîne en nombre <see cref="T:System.Single" />.</summary>
      <returns>Valeur convertie.</returns>
      <param name="value">Valeur à convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsFloat(System.String,System.Single)">
      <summary>Convertit une chaîne en nombre <see cref="T:System.Single" /> et spécifie une valeur par défaut.</summary>
      <returns>Valeur convertie.</returns>
      <param name="value">Valeur à convertir.</param>
      <param name="defaultValue">Valeur à retourner si <paramref name="value" /> a la valeur null.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsInt(System.String)">
      <summary>Convertit une chaîne en entier.</summary>
      <returns>Valeur convertie.</returns>
      <param name="value">Valeur à convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsInt(System.String,System.Int32)">
      <summary>Convertit une chaîne en entier et spécifie une valeur par défaut.</summary>
      <returns>Valeur convertie.</returns>
      <param name="value">Valeur à convertir.</param>
      <param name="defaultValue">Valeur à retourner si <paramref name="value" /> a la valeur null ou est une valeur non valide.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.Is``1(System.String)">
      <summary>Vérifie si une chaîne peut être convertie vers le type de données spécifié.</summary>
      <returns>true si <paramref name="value" /> peut être converti vers le type spécifié ; sinon, false.</returns>
      <param name="value">Valeur à tester.</param>
      <typeparam name="TValue">Type de données vers lequel effectuer la conversion.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsBool(System.String)">
      <summary>Vérifie si une chaîne peut être convertie en type booléen (true/false).</summary>
      <returns>true si <paramref name="value" /> peut être converti vers le type spécifié ; sinon, false.</returns>
      <param name="value">Valeur de chaîne à tester.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsDateTime(System.String)">
      <summary>Vérifie si une chaîne peut être convertie vers le type <see cref="T:System.DateTime" />.</summary>
      <returns>true si <paramref name="value" /> peut être converti vers le type spécifié ; sinon, false.</returns>
      <param name="value">Valeur de chaîne à tester.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsDecimal(System.String)">
      <summary>Vérifie si une chaîne peut être convertie vers le type <see cref="T:System.Decimal" />.</summary>
      <returns>true si <paramref name="value" /> peut être converti vers le type spécifié ; sinon, false.</returns>
      <param name="value">Valeur de chaîne à tester.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsEmpty(System.String)">
      <summary>Vérifie si une valeur de chaîne a la valeur null ou est vide.</summary>
      <returns>true si <paramref name="value" /> a la valeur null ou est une chaîne nulle ("") ; sinon, false.</returns>
      <param name="value">Valeur de chaîne à tester.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsFloat(System.String)">
      <summary>Vérifie si une chaîne peut être convertie vers le type <see cref="T:System.Single" />.</summary>
      <returns>true si <paramref name="value" /> peut être converti vers le type spécifié ; sinon, false.</returns>
      <param name="value">Valeur de chaîne à tester.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsInt(System.String)">
      <summary>Vérifie si une chaîne peut être convertie en entier.</summary>
      <returns>true si <paramref name="value" /> peut être converti vers le type spécifié ; sinon, false.</returns>
      <param name="value">Valeur de chaîne à tester.</param>
    </member>
    <member name="T:System.Web.WebPages.TemplateFileInfo">
      <summary>Contient les méthodes et propriétés qui décrivent un modèle d'informations sur le fichier.</summary>
    </member>
    <member name="M:System.Web.WebPages.TemplateFileInfo.#ctor(System.String)">
      <summary>I	nitialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.TemplateFileInfo" /> à l'aide du chemin d'accès virtuel spécifié.</summary>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
    </member>
    <member name="P:System.Web.WebPages.TemplateFileInfo.VirtualPath">
      <summary>Obtient le chemin d'accès virtuel de la page Web.</summary>
      <returns>Chemin d'accès virtuel.</returns>
    </member>
    <member name="T:System.Web.WebPages.TemplateStack">
      <summary>Représente une collection LIFO (dernier entré, premier sorti) de fichiers de modèle <see cref="T:System.Web.WebPages.ITemplateFile" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.GetCurrentTemplate(System.Web.HttpContextBase)">
      <summary>Retourne le fichier de modèle actuel à partir du contexte HTTP spécifié.</summary>
      <returns>Fichier de modèle supprimé du haut de la pile.</returns>
      <param name="httpContext"> Contexte HTTP contenant la pile qui stocke les fichiers de modèle.</param>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.Pop(System.Web.HttpContextBase)">
      <summary>Supprime et retourne le fichier de modèle situé en haut de la pile dans le contexte HTTP spécifié.</summary>
      <returns>Fichier de modèle supprimé du haut de la pile.</returns>
      <param name="httpContext">Contexte HTTP contenant la pile qui stocke les fichiers de modèle.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.Push(System.Web.HttpContextBase,System.Web.WebPages.ITemplateFile)">
      <summary>Insère un fichier de modèle en haut de la pile dans le contexte HTTP spécifié.</summary>
      <param name="httpContext">Contexte HTTP contenant la pile qui stocke les fichiers de modèle.</param>
      <param name="templateFile">Fichier de modèle à pousser vers la pile spécifiée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> ou <paramref name="templateFile" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.WebPages.ValidationHelper">
      <summary>Implémente la validation pour l'entrée utilisateur.</summary>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Add(System.Collections.Generic.IEnumerable{System.String},System.Web.WebPages.IValidator[])">
      <summary>Enregistre une liste d'éléments d'entrée utilisateur à des fins de validation.</summary>
      <param name="fields">Nom (valeur de l'attribut name) des éléments d'entrée utilisateur à valider.</param>
      <param name="validators">	Type de validation à enregistrer pour chaque élément d'entrée utilisateur spécifié dans <paramref name="fields" />.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Add(System.String,System.Web.WebPages.IValidator[])">
      <summary>Enregistre un élément d'entrée utilisateur à des fins de validation.</summary>
      <param name="field">Nom (valeur de l'attribut name) de l'élément d'entrée utilisateur à valider.</param>
      <param name="validators">Liste d'un ou plusieurs types de validations à enregistrer.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.AddFormError(System.String)">
      <summary>Ajoute un message d'erreur.</summary>
      <param name="errorMessage">Message d'erreur.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.ClassFor(System.String)">
      <summary>Restitue un attribut qui fait référence à la définition de style CSS à utiliser lors de la restitution des messages de validation pour l'élément d'entrée utilisateur.</summary>
      <returns>Attribut.</returns>
      <param name="field">Nom (valeur de l'attribut name) de l'élément d'entrée utilisateur à valider.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.For(System.String)">
      <summary>Restitue les attributs qui activent la validation côté client pour un élément d'entrée utilisateur individuel.</summary>
      <returns>Attributs à restituer.</returns>
      <param name="field">Nom (valeur de l'attribut name) de l'élément d'entrée utilisateur à valider.</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.FormField">
      <summary>Obtient le nom du formulaire actuel.Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
      <returns>Nom.</returns>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.GetErrors(System.String[])">
      <summary>Retourne la liste des erreurs de validation actuelles et permet éventuellement de spécifier la liste des champs à vérifier.</summary>
      <returns>Liste des erreurs.</returns>
      <param name="fields">Facultatif.Nom (valeur de l'attribut name) des éléments d'entrée utilisateur pour lesquels obtenir les informations sur l'erreur.Vous pouvez spécifier n'importe quel nombre de noms d'éléments, séparés par des virgules.Si vous ne spécifiez pas de liste de champs, la méthode retourne des erreurs pour tous les champs.</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.InvalidCssClass">
      <summary>Obtient le nom de la classe qui permet de spécifier l'apparence de l'affichage des messages d'erreur lorsque des erreurs se produisent.Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
      <returns>Nom.</returns>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.IsValid(System.String[])">
      <summary>Détermine si le contenu des champs d'entrée utilisateur réussit les vérifications de validation et permet éventuellement de spécifier la liste des champs à vérifier.</summary>
      <returns>true si le ou les champs spécifiés réussissent les vérifications de validation ; false si un des champs contient une erreur de validation.</returns>
      <param name="fields">Facultatif.Nom (valeur de l'attribut name) des éléments d'entrée utilisateur pour lesquels vérifier les erreurs de validation.Vous pouvez spécifier n'importe quel nombre de noms d'éléments, séparés par des virgules.Si vous ne spécifiez pas de liste de champs, la méthode vérifie tous les éléments enregistrés à des fins de validation.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireField(System.String)">
      <summary>Enregistre le champ spécifié comme champ nécessitant une entrée utilisateur.</summary>
      <param name="field">Nom (valeur de l'attribut name) de l'élément d'entrée utilisateur à valider.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireField(System.String,System.String)">
      <summary>Enregistre le champ spécifié comme nécessitant une entrée utilisateur et enregistre la chaîne spécifiée en tant que message d'erreur à afficher si aucune valeur n'est fournie.</summary>
      <param name="field">Nom (valeur de l'attribut name) de l'élément d'entrée utilisateur à valider.</param>
      <param name="errorMessage">Message d'erreur.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireFields(System.String[])">
      <summary>Enregistre les champs spécifiés comme champs nécessitant une entrée utilisateur.</summary>
      <param name="fields">Nom (valeur de l'attribut name) des éléments d'entrée utilisateur à valider.Vous pouvez spécifier n'importe quel nombre de noms d'éléments, séparés par des virgules.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Validate(System.String[])">
      <summary>Exécute la validation sur les éléments enregistrés à cette fin et permet éventuellement de spécifier la liste des champs à vérifier.</summary>
      <returns>Liste des erreurs pour les champs spécifiés, si des erreurs de validation se produisent.</returns>
      <param name="fields">Facultatif.Nom (valeur de l'attribut name) des éléments d'entrée utilisateur à valider.Vous pouvez spécifier n'importe quel nombre de noms d'éléments, séparés par des virgules.Si vous ne spécifiez pas de liste, la méthode valide tous les éléments enregistrés.</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.ValidCssClass">
      <summary>Obtient le nom de la classe qui permet de spécifier l'apparence de l'affichage des messages d'erreur lorsque des erreurs se produisent.Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
      <returns>Nom.</returns>
    </member>
    <member name="T:System.Web.WebPages.Validator">
      <summary>	Définit les tests de validation qui peuvent être enregistrés à l'aide de la méthode <see cref="M:System.Web.WebPages.ValidationHelper.Add(System.String,System.Web.WebPages.IValidator[])" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Validator.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.Validator" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Validator.DateTime(System.String)">
      <summary>Définit un test de validation qui vérifie si une valeur peut être traitée en tant que valeur date/heure.</summary>
      <returns>Test de validation.</returns>
      <param name="errorMessage">Message d'erreur à afficher en cas d'échec de la validation.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Decimal(System.String)">
      <summary>Définit un test de validation qui vérifie si une valeur peut être traitée en tant que nombre décimal.</summary>
      <returns>Test de validation.</returns>
      <param name="errorMessage">Message d'erreur à afficher en cas d'échec de la validation.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.EqualsTo(System.String,System.String)">
      <summary>Définit un test de validation qui vérifie l'entrée utilisateur par rapport à la valeur d'un autre champ.</summary>
      <returns>Test de validation.</returns>
      <param name="otherFieldName">Autre champ à comparer.</param>
      <param name="errorMessage">Message d'erreur à afficher en cas d'échec de la validation.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Float(System.String)">
      <summary>Définit un test de validation qui vérifie si une valeur peut être traitée en tant que nombre à virgule flottante.</summary>
      <returns>Test de validation.</returns>
      <param name="errorMessage">Message d'erreur à afficher en cas d'échec de la validation.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Integer(System.String)">
      <summary>Définit un test de validation qui vérifie si une valeur peut être traitée en tant qu'entier.</summary>
      <returns>Test de validation.</returns>
      <param name="errorMessage">Message d'erreur à afficher en cas d'échec de la validation.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Range(System.Double,System.Double,System.String)">
      <summary>Définit un test de validation qui vérifie si un nombre décimal est compris dans une plage spécifique.</summary>
      <returns>Test de validation.</returns>
      <param name="minValue">Valeur minimale.La valeur par défaut est 0.</param>
      <param name="maxValue">Valeur maximale.</param>
      <param name="errorMessage">Message d'erreur à afficher en cas d'échec de la validation.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Range(System.Int32,System.Int32,System.String)">
      <summary>Définit un test de validation qui vérifie si une valeur entière est comprise dans une plage spécifique.</summary>
      <returns>Test de validation.</returns>
      <param name="minValue">Valeur minimale.La valeur par défaut est 0.</param>
      <param name="maxValue">La valeur maximale. </param>
      <param name="errorMessage">Message d'erreur à afficher en cas d'échec de la validation.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Regex(System.String,System.String)">
      <summary>Définit un test de validation qui vérifie une valeur par rapport à un modèle spécifié en tant qu'expression régulière.</summary>
      <returns>Test de validation.</returns>
      <param name="pattern">Expression régulière à utiliser pour tester l'entrée utilisateur.</param>
      <param name="errorMessage">Message d'erreur à afficher en cas d'échec de la validation.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Required(System.String)">
      <summary>Définit un test de validation qui vérifie si une valeur a été fournie.</summary>
      <returns>Test de validation.</returns>
      <param name="errorMessage">Message d'erreur à afficher en cas d'échec de la validation.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.StringLength(System.Int32,System.Int32,System.String)">
      <summary>Définit un test de validation qui vérifie la longueur d'une chaîne.</summary>
      <returns>Test de validation.</returns>
      <param name="maxLength">Longueur maximale de la chaîne.</param>
      <param name="minLength">Longueur minimale de la chaîne.La valeur par défaut est 0.</param>
      <param name="errorMessage">Message d'erreur à afficher en cas d'échec de la validation.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Url(System.String)">
      <summary>Définit un test de validation qui vérifie si une valeur est une URL correcte.</summary>
      <returns>Test de validation.</returns>
      <param name="errorMessage">Message d'erreur à afficher en cas d'échec de la validation.</param>
    </member>
    <member name="T:System.Web.WebPages.VirtualPathFactoryManager">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.CreateInstance(System.String)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.Exists(System.String)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.RegisterVirtualPathFactory(System.Web.WebPages.IVirtualPathFactory)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="T:System.Web.WebPages.WebPage">
      <summary>Représente une page ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPage.#ctor">
      <summary>Appelé à partir d'une classe dérivée pour créer une instance basée sur la classe <see cref="T:System.Web.WebPages.WebPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Context">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.HttpContextBase" /> associé à une page.</summary>
      <returns>Données de contexte actuelles.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.ExecutePageHierarchy">
      <summary>Exécute le code dans un ensemble de pages dépendantes.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Html">
      <summary>Obtient l'objet <see cref="T:System.Web.WebPages.Html.HtmlHelper" /> associé à une page.</summary>
      <returns>Objet qui peut restituer les contrôles de formulaire HTML dans une page.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.InitializePage">
      <summary>Initialise un objet qui hérite de la classe <see cref="T:System.Web.WebPages.WebPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Model">
      <summary>Obtient le modèle associé à une page.</summary>
      <returns>Objet qui représente un modèle associé aux données de vue d'une page.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPage.ModelState">
      <summary>Obtient l'état du modèle associé à une page.</summary>
      <returns>État du modèle.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.RegisterPageExecutor(System.Web.WebPages.IWebPageRequestExecutor)">
      <summary>Ajoute une classe à une liste de classes qui traitent l'exécution de la page et implémentent les fonctionnalités personnalisées des pages.</summary>
      <param name="executor">Classe à ajouter.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPage.RenderPage(System.String,System.Object[])">
      <summary>Restitue une page de contenu.</summary>
      <returns>Objet pouvant écrire la sortie de la page.</returns>
      <param name="path">Chemin d'accès de la page à restituer.</param>
      <param name="data">Données à passer à la page.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Validation">
      <summary>Obtient l'application auxiliaire de validation pour le contexte de page actuel.</summary>
      <returns>Application auxiliaire de validation.</returns>
    </member>
    <member name="T:System.Web.WebPages.WebPageBase">
      <summary>Fournit la classe de base des classes qui représentent une page ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.#ctor">
      <summary>Initialise la classe <see cref="T:System.Web.WebPages.WebPageBase" /> à des fins d'utilisation avec une instance de classe héritée.Ce constructeur ne peut être appelé que par une classe héritée.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>En cas de substitution dans une classe dérivée, configure la page Web actuelle en fonction de la configuration de la page Web parente.</summary>
      <param name="parentPage">Page parente à partir de laquelle lire les informations de configuration.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.CreateInstanceFromVirtualPath(System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Web.WebPages.WebPageBase" /> à l'aide du chemin d'accès virtuel spécifié.</summary>
      <returns>Nouvel objet <see cref="T:System.Web.WebPages.WebPageBase" />.</returns>
      <param name="virtualPath">Chemin d'accès virtuel à utiliser pour créer l'instance.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.CreatePageFromVirtualPath(System.String,System.Web.HttpContextBase,System.Func{System.String,System.Boolean},System.Web.WebPages.DisplayModeProvider,System.Web.WebPages.IDisplayMode)">
      <summary>Essaie de créer une instance WebPageBase à partir d'un virtualPath et encapsule les exceptions de compilateur complexes dans des messages plus simples</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.DefineSection(System.String,System.Web.WebPages.SectionWriter)">
      <summary>Appelé par les pages de contenu pour créer des sections de contenu nommées.</summary>
      <param name="name">Nom de la section à créer.</param>
      <param name="action">Type d'action à entreprendre avec la nouvelle section.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy">
      <summary>Exécute le code dans un ensemble de pages Web dépendantes.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy(System.Web.WebPages.WebPageContext,System.IO.TextWriter)">
      <summary>Exécute le code dans un ensemble de pages Web dépendantes à l'aide des paramètres spécifiés.</summary>
      <param name="pageContext">Données de contexte de la page.</param>
      <param name="writer">Writer à utiliser pour écrire le code HTML exécuté.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy(System.Web.WebPages.WebPageContext,System.IO.TextWriter,System.Web.WebPages.WebPageRenderingBase)">
      <summary>Exécute le code dans un ensemble de pages Web dépendantes à l'aide du contexte, du writer et de la page de démarrage spécifiés.</summary>
      <param name="pageContext">Données de contexte de la page.</param>
      <param name="writer">Writer à utiliser pour écrire le code HTML exécuté.</param>
      <param name="startPage">Page pour laquelle lancer l'exécution dans la hiérarchie des pages.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.GetOutputWriter">
      <summary>Retourne l'instance TextWriter qui permet de restituer la page.</summary>
      <returns>TextWriter.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.InitializePage">
      <summary>Initialise la page actuelle.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.IsSectionDefined(System.String)">
      <summary>Retourne une valeur qui indique si la section spécifiée est définie dans la page.</summary>
      <returns>true si la section spécifiée est définie dans la page ; sinon, false.</returns>
      <param name="name">Nom de la section à rechercher.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Layout">
      <summary>Obtient ou définit le chemin d'accès d'une page de disposition.</summary>
      <returns>Chemin d'accès de la page de disposition.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Output">
      <summary>Obtient l'objet <see cref="T:System.IO.TextWriter" /> actuel pour la page.</summary>
      <returns>Objet <see cref="T:System.IO.TextWriter" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.OutputStack">
      <summary>Obtient la pile d'objets <see cref="T:System.IO.TextWriter" /> pour le contexte de page actuel.</summary>
      <returns>Objets <see cref="T:System.IO.TextWriter" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Page">
      <summary>Fournit un accès qui utilise les propriétés aux données de page partagées entre les pages, les pages de disposition et les pages partielles.</summary>
      <returns>Objet qui contient les données de page.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.PageData">
      <summary>Fournit un accès de type tableau aux données de page partagées entre les pages, les pages de disposition et les pages partielles.</summary>
      <returns>Dictionnaire contenant les données de page.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.PopContext">
      <summary>Retourne et supprime le contexte du haut de l'instance <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.PushContext(System.Web.WebPages.WebPageContext,System.IO.TextWriter)">
      <summary>Insère le contexte spécifié en haut de l'instance <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" />.</summary>
      <param name="pageContext">Contexte de page à pousser vers l'instance <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" />.</param>
      <param name="writer">Writer du contexte de la page.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderBody">
      <summary>Dans les pages de disposition, restitue la portion d'une page de contenu qui ne figure pas dans une section nommée.</summary>
      <returns>Contenu HTML à restituer.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderPage(System.String,System.Object[])">
      <summary>Restitue le contenu d'une page au sein d'une autre page.</summary>
      <returns>Contenu HTML à restituer.</returns>
      <param name="path">Chemin d'accès de la page à restituer.</param>
      <param name="data">(Facultatif) Tableau de données à passer à la page restituée.Dans la page restituée, ces paramètres sont accessibles à l'aide de la propriété <see cref="P:System.Web.WebPages.WebPageBase.PageData" />.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderSection(System.String)">
      <summary>Dans les pages de disposition, restitue le contenu d'une section nommée.</summary>
      <returns>Contenu HTML à restituer.</returns>
      <param name="name">Section à restituer.</param>
      <exception cref="T:System.Web.HttpException">La section <paramref name="name" /> a déjà été restituée.ouLa section <paramref name="name" /> a été marquée comme étant obligatoire, mais est introuvable.</exception>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderSection(System.String,System.Boolean)">
      <summary>Dans les pages de disposition, restitue le contenu d'une section nommée et spécifie si la section est obligatoire.</summary>
      <returns>Contenu HTML à restituer.</returns>
      <param name="name">Section à restituer.</param>
      <param name="required">true pour spécifier que la section est obligatoire ; sinon, false.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.Write(System.Object)">
      <summary>Écrit l'objet spécifié en tant que chaîne codée au format HTML.</summary>
      <param name="value">Objet à encoder et à écrire.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.Write(System.Web.WebPages.HelperResult)">
      <summary>Écrit l'objet <see cref="T:System.Web.WebPages.HelperResult" /> spécifié en tant que chaîne codée au format HTML.</summary>
      <param name="result">Résultat d'application auxiliaire à encoder et à écrire.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.WriteLiteral(System.Object)">
      <summary>Écrit l'objet spécifié sans l'encoder préalablement au format HTML.</summary>
      <param name="value">Objet à écrire.</param>
    </member>
    <member name="T:System.Web.WebPages.WebPageContext">
      <summary>Contient les données utilisées par un objet <see cref="T:System.Web.WebPages.WebPage" /> pour référencer les détails au sujet de l'application Web, de la requête HTTP actuelle, du contexte d'exécution actuel et des données relatives au rendu des pages.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.WebPageContext" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageContext.#ctor(System.Web.HttpContextBase,System.Web.WebPages.WebPageRenderingBase,System.Object)">
      <summary>Initialise une nouvelle instance de la classe à l'aide du contexte, de la page et du modèle spécifiés.</summary>
      <param name="context">Données de contexte de requête HTTP à associer au contexte de la page.</param>
      <param name="page">Données de page à partager entre les pages, les pages de disposition et les pages partielles.</param>
      <param name="model">Modèle à associer aux données de vue.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Current">
      <summary>Obtient une référence à l'objet <see cref="T:System.Web.WebPages.WebPageContext" /> actuel associé à une page.</summary>
      <returns>Objet de contexte de page actuel.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Model">
      <summary>Obtient le modèle associé à une page.</summary>
      <returns>Objet qui représente un modèle associé aux données de vue d'une page.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Page">
      <summary>Obtient l'objet <see cref="T:System.Web.WebPages.WebPageRenderingBase" /> associé à une page.</summary>
      <returns>Objet qui restitue la page.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.PageData">
      <summary>Obtient les données de page partagées entre les pages, les pages de disposition et les pages partielles.</summary>
      <returns>Dictionnaire contenant les données de page.</returns>
    </member>
    <member name="T:System.Web.WebPages.WebPageExecutingBase">
      <summary>Fournit les objets et méthodes qui permettent d'exécuter et de restituer les pages ASP.NET qui incluent la syntaxe Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.WebPageExecutingBase" />.Ce constructeur ne peut être appelé que par une classe héritée.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.App"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.AppState"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.Context">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit l'objet <see cref="T:System.Web.HttpContextBase" /> associé à une page.</summary>
      <returns>Données de contexte actuelles.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Execute"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.GetOutputWriter">
      <summary>Retourne l'instance TextWriter qui permet de restituer la page.</summary>
      <returns>TextWriter.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Href(System.String,System.Object[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.NormalizeLayoutPagePath(System.String)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.NormalizePath(System.String)"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.VirtualPath"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.VirtualPathFactory"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Write(System.Object)">
      <summary>Écrit la représentation sous forme de chaîne de l'objet spécifié en tant que chaîne codée au format HTML.</summary>
      <param name="value">Objet à encoder et à écrire.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Write(System.Web.WebPages.HelperResult)">
      <summary>Écrit l'objet <see cref="T:System.Web.WebPages.HelperResult" /> spécifié en tant que chaîne codée au format HTML.</summary>
      <param name="result">Résultat d'application auxiliaire à encoder et à écrire.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttribute(System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttributeTo(System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttributeTo(System.String,System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteLiteral(System.Object)">
      <summary>Écrit l'objet spécifié sans codage HTML.</summary>
      <param name="value">Objet à écrire.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteLiteralTo(System.IO.TextWriter,System.Object)">
      <summary>Écrit l'objet spécifié dans l'instance <see cref="T:System.IO.TextWriter" /> spécifiée sans codage HTML.</summary>
      <param name="writer">TextWriter.</param>
      <param name="content">Objet à écrire.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteTo(System.IO.TextWriter,System.Object)">
      <summary>Écrit l'objet spécifié en tant que chaîne codée au format HTML dans le TextWriter spécifié.</summary>
      <param name="writer">TextWriter.</param>
      <param name="content">Objet à encoder et à écrire.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>Écrit l'objet <see cref="T:System.Web.WebPages.HelperResult" /> spécifié en tant que chaîne codée au format HTML dans le TextWriter spécifié.</summary>
      <param name="writer">TextWriter.</param>
      <param name="content">Résultat d'application auxiliaire à encoder et à écrire.</param>
    </member>
    <member name="T:System.Web.WebPages.WebPageHttpHandler">
      <summary>Fournit les méthodes et propriétés qui permettent de traiter des extensions d'URL spécifiques.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.#ctor(System.Web.WebPages.WebPage)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> à l'aide de la page Web spécifiée.</summary>
      <param name="webPage">Page Web à traiter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPage" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.CreateFromVirtualPath(System.String)">
      <summary>Crée un objet de gestionnaire <see cref="T:System.Web.IHttpHandler" /> à partir du chemin d'accès virtuel spécifié.</summary>
      <returns>Objet <see cref="T:System.Web.IHttpHandler" /> pour le chemin d'accès virtuel spécifié.</returns>
      <param name="virtualPath">Chemin d'accès virtuel à utiliser pour créer le gestionnaire.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageHttpHandler.DisableWebPagesResponseHeader">
      <summary>Obtient ou définit une valeur qui indique si les en-têtes de réponse de page Web sont désactivés.</summary>
      <returns>true si les en-têtes de réponse de page Web sont désactivés ; sinon, false.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.GetRegisteredExtensions">
      <summary>Retourne une liste d'extensions de noms de fichiers que l'instance <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> actuelle peut traiter.</summary>
      <returns>Liste en lecture seule des extensions de noms de fichiers qui sont traitées par l'instance <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> actuelle.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageHttpHandler.IsReusable">
      <summary>Obtient une valeur qui indique si une autre demande peut utiliser l'instance <see cref="T:System.Web.WebPages.WebPageHttpHandler" />.</summary>
      <returns>true si l'instance <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> peut être réutilisée ; sinon, false.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Traite la page Web à l'aide du contexte spécifié.</summary>
      <param name="context">Contexte à utiliser lors du traitement de la page Web.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.RegisterExtension(System.String)">
      <summary>Ajoute une extension de nom de fichier à la liste des extensions traitées par l'instance <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> actuelle.</summary>
      <param name="extension">Extension à ajouter, sans point.</param>
    </member>
    <member name="F:System.Web.WebPages.WebPageHttpHandler.WebPagesVersionHeaderName">
      <summary>Nom de balise HTML (X-AspNetWebPages-Version) pour la version de la spécification ASP.NET Web Pages utilisée par cette page Web.</summary>
    </member>
    <member name="T:System.Web.WebPages.WebPageRenderingBase">
      <summary>Fournit les méthodes et propriétés qui permettent de restituer les pages qui utilisent le moteur de vue Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.WebPageRenderingBase" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Cache"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Culture"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.DisplayMode"></member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.ExecutePageHierarchy">
      <summary>En cas de substitution dans une classe dérivée, appelle les méthodes qui permettent d'initialiser la page.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.IsAjax"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.IsPost"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Layout">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le chemin d'accès d'une page de disposition.</summary>
      <returns>Chemin d'accès d'une page de disposition.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Page">
      <summary>En cas de substitution dans une classe dérivée, fournit un accès qui utilise les propriétés aux données de page partagées entre les pages, les pages de disposition et les pages partielles.</summary>
      <returns>Objet qui contient les données de page.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.PageContext"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.PageData">
      <summary>En cas de substitution dans une classe dérivée, fournit un accès de type tableau aux données de page partagées entre les pages, les pages de disposition et les pages partielles.</summary>
      <returns>Objet qui fournit un accès de type tableau aux données de page.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Profile"></member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.RenderPage(System.String,System.Object[])">
      <summary>En cas de substitution dans une classe dérivée, restitue une page Web.</summary>
      <returns>Balisage qui représente la page Web.</returns>
      <param name="path">Chemin d'accès de la page à restituer.</param>
      <param name="data">Données supplémentaires permettant de restituer la page.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Request"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Response"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Server"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Session"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.TemplateInfo"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.UICulture"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.UrlData"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.User"></member>
    <member name="T:System.Web.WebPages.Html.HtmlHelper">
      <summary>Prend en charge le rendu des contrôles de formulaire HTML et l'exécution de la validation de formulaire dans une page Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>Crée un dictionnaire d'attributs HTML à partir de l'objet d'entrée, et traduit les traits de soulignement en tirets.</summary>
      <returns>Dictionnaire qui représente les attributs HTML.</returns>
      <param name="htmlAttributes">Objet anonyme décrivant les attributs HTML.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AttributeEncode(System.Object)">
      <summary>Retourne une chaîne codée au format HTML qui représente l'objet spécifié à l'aide d'un codage minimal adapté uniquement aux attributs HTML entre guillemets.</summary>
      <returns>Chaîne codée au format HTML qui représente l'objet.</returns>
      <param name="value">Objet à encoder.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AttributeEncode(System.String)">
      <summary>Retourne une chaîne codée au format HTML qui représente la chaîne spécifiée à l'aide d'un codage minimal adapté uniquement aux attributs HTML entre guillemets.</summary>
      <returns>Chaîne codée au format HTML qui représente la chaîne d'origine.</returns>
      <param name="value">Chaîne à encoder.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String)">
      <summary>Retourne un contrôle de case à cocher HTML portant le nom spécifié.</summary>
      <returns>Balisage HTML qui représente le contrôle de case à cocher.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean)">
      <summary>Retourne un contrôle de case à cocher HTML incluant le nom et l'état vérifié par défaut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de case à cocher.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="isChecked">true pour indiquer que l'attribut checked est défini sur checked ; sinon, false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de case à cocher HTML incluant le nom spécifié, le statut vérifié par défaut et les attributs personnalisés définis par un dictionnaire d'attributs.</summary>
      <returns>Balisage HTML qui représente le contrôle de case à cocher.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="isChecked">true pour indiquer que l'attribut checked est défini sur checked ; sinon, false.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean,System.Object)">
      <summary>Retourne un contrôle de case à cocher HTML incluant le nom spécifié, le statut vérifié par défaut et les attributs personnalisés définis par un objet attribut.</summary>
      <returns>Balisage HTML qui représente le contrôle de case à cocher.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="isChecked">true pour indiquer que l'attribut checked est défini sur checked ; sinon, false.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de case à cocher HTML incluant le nom spécifié et les attributs personnalisés définis par un dictionnaire d'attributs.</summary>
      <returns>Balisage HTML qui représente le contrôle de case à cocher.</returns>
      <param name="name"> Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Object)">
      <summary>Retourne un contrôle de case à cocher HTML incluant le nom spécifié et les attributs personnalisés définis par un objet attribut.</summary>
      <returns>Balisage HTML qui représente le contrôle de case à cocher.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Retourne un contrôle de liste déroulante HTML portant le nom spécifié et contenant les éléments de liste spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de liste déroulante.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de liste déroulante HTML portant le nom spécifié et contenant les attributs personnalisés définis par un dictionnaire d'attributs ainsi que les éléments de liste spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de liste déroulante.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Retourne un contrôle de liste déroulante HTML portant le nom spécifié et contenant les attributs personnalisés définis par un objet attribut ainsi que les éléments de liste spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de liste déroulante.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Retourne un contrôle de liste déroulante HTML portant le nom spécifié et contenant les éléments de liste et l'élément par défaut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de liste déroulante.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de liste déroulante HTML portant le nom spécifié et contenant les attributs personnalisés définis par un dictionnaire d'attributs ainsi que les éléments de liste et l'élément par défaut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de liste déroulante.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Retourne un contrôle de liste déroulante HTML portant le nom spécifié et contenant les attributs personnalisés définis par un objet attribut ainsi que les éléments de liste et l'élément par défaut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de liste déroulante.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de liste déroulante HTML portant le nom spécifié et contenant les attributs personnalisés définis par un dictionnaire d'attributs et la sélection par défaut, ainsi que les éléments de liste et l'élément par défaut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de liste déroulante.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="selectedValue">Valeur qui spécifie l'élément sélectionné par défaut dans la liste.L'élément sélectionné est le premier élément de la liste dont la valeur correspond au paramètre (ou dont le texte correspond, s'il n'existe aucune valeur.)</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Object)">
      <summary>Retourne un contrôle de liste déroulante HTML portant le nom spécifié et contenant les attributs personnalisés définis par un objet attribut et la sélection par défaut, ainsi que les éléments de liste et l'élément par défaut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de liste déroulante.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="selectedValue">Valeur qui spécifie l'élément sélectionné par défaut dans la liste.L'élément sélectionné est le premier élément de la liste incluant une valeur correspondante ou qui correspond au texte affiché de l'élément si l'élément n'inclut aucune valeur.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Encode(System.Object)">
      <summary>Retourne une chaîne codée au format HTML qui représente l'objet spécifié à l'aide d'un codage complet adapté au code HTML arbitraire.</summary>
      <returns>Chaîne codée au format HTML qui représente l'objet.</returns>
      <param name="value">Objet à encoder.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Encode(System.String)">
      <summary>Retourne une chaîne codée au format HTML qui représente la chaîne spécifiée à l'aide d'un codage complet adapté au code HTML arbitraire.</summary>
      <returns>Chaîne codée au format HTML qui représente la chaîne d'origine.</returns>
      <param name="value">Chaîne à encoder.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String)">
      <summary>Retourne un contrôle masqué HTML portant le nom spécifié.</summary>
      <returns>Balisage HTML qui représente le contrôle masqué.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object)">
      <summary>Retourne un contrôle masqué HTML incluant le nom et la valeur spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle masqué.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle masqué HTML incluant le nom spécifié, la valeur et les attributs personnalisés définis par un dictionnaire d'attributs.</summary>
      <returns>Balisage HTML qui représente le contrôle masqué.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object,System.Object)">
      <summary>Retourne un contrôle masqué HTML incluant le nom spécifié, la valeur et les attributs personnalisés définis par un objet attribut.</summary>
      <returns>Balisage HTML qui représente le contrôle masqué.</returns>
      <param name="name"> Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.IdAttributeDotReplacement">
      <summary>Obtient ou définit le caractère qui permet de remplacer le point (.) dans l'attribut id des contrôles de formulaire restitués.</summary>
      <returns>Caractère qui permet de remplacer le point dans l'attribut id des contrôles de formulaire restitués.La valeur par défaut est un trait de soulignement (_).</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String)">
      <summary>Retourne un nom HTML qui affiche le texte spécifié.</summary>
      <returns>Balisage HTML qui représente le nom.</returns>
      <param name="labelText">Texte à afficher.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.Object)">
      <summary>Retourne un nom HTML qui affiche le texte spécifié et inclut les attributs personnalisés spécifiés.</summary>
      <returns>Balisage HTML qui représente le nom.</returns>
      <param name="labelText">Texte à afficher.</param>
      <param name="attributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String)">
      <summary>Retourne un nom HTML qui affiche le texte spécifié et inclut l'attribut for spécifié.</summary>
      <returns>Balisage HTML qui représente le nom.</returns>
      <param name="labelText">Texte à afficher.</param>
      <param name="labelFor">Valeur à attribuer à l'attribut for de l'élément de contrôle HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un nom HTML qui affiche le texte spécifié et inclut l'attribut for spécifié et les attributs personnalisés définis par un dictionnaire d'attributs.</summary>
      <returns>Balisage HTML qui représente le nom.</returns>
      <param name="labelText">Texte à afficher.</param>
      <param name="labelFor">Valeur à attribuer à l'attribut for de l'élément de contrôle HTML.</param>
      <param name="attributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String,System.Object)">
      <summary>Retourne un nom HTML qui affiche le texte spécifié et inclut l'attribut for spécifié et les attributs personnalisés définis par un objet attribut.</summary>
      <returns>Balisage HTML qui représente le nom.</returns>
      <param name="labelText">Texte à afficher.</param>
      <param name="labelFor">Valeur à attribuer à l'attribut for de l'élément de contrôle HTML.</param>
      <param name="attributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Retourne un contrôle de zone de liste HTML portant le nom spécifié et contenant les éléments de liste spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de liste.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de zone de liste HTML portant le nom spécifié et contenant les attributs personnalisés définis par un dictionnaire d'attributs ainsi que les éléments de liste spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de liste.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Retourne un contrôle de zone de liste HTML portant le nom spécifié et contenant les attributs personnalisés définis par un objet attribut ainsi que les éléments de liste spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de liste.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean)">
      <summary>Retourne un contrôle de zone de liste incluant le nom, la taille, les éléments de liste et les sélections par défaut spécifiés, et qui indique si les sélections multiples sont activées.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de liste.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="selectedValues">Objet qui spécifie les éléments sélectionnés par défaut dans la liste.Les sélections sont récupérées par réflexion en examinant les propriétés de l'objet.</param>
      <param name="size">Valeur à attribuer à l'attribut size de l'élément.</param>
      <param name="allowMultiple">true pour indiquer que les sélections multiples sont activées ; sinon, false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Retourne un contrôle de zone de liste HTML portant le nom spécifié et contenant les éléments de liste et l'élément par défaut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de liste.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la zone de liste.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de zone de liste HTML portant le nom spécifié et contenant les attributs personnalisés définis par un dictionnaire d'attributs ainsi que les éléments de liste et l'élément par défaut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de liste.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Retourne un contrôle de zone de liste HTML portant le nom spécifié et contenant les attributs personnalisés définis par un objet attribut ainsi que les éléments de liste et l'élément par défaut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de liste.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la zone de liste.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de zone de liste HTML portant le nom spécifié et contenant les attributs personnalisés définis par un dictionnaire d'attributs ainsi que les éléments de liste, l'élément par défaut et les sélections spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de liste.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="selectedValues">Objet qui spécifie les éléments sélectionnés par défaut dans la liste.Les sélections sont récupérées par réflexion en examinant les propriétés de l'objet.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean)">
      <summary>Retourne un contrôle de zone de liste HTML incluant le nom, la taille, les éléments, l'élément par défaut et les sélections spécifiés, et qui indique si les sélections multiples sont activées.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de liste.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="selectedValues">Objet qui spécifie les éléments sélectionnés par défaut dans la liste.Les sélections sont récupérées par réflexion en examinant les propriétés de l'objet.</param>
      <param name="size">Valeur à attribuer à l'attribut size de l'élément.</param>
      <param name="allowMultiple">true pour indiquer que les sélections multiples sont activées ; sinon, false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de zone de liste HTML incluant le nom, la taille, les attributs personnalisés définis par un dictionnaire d'attributs, les éléments, l'élément par défaut et les sélections spécifiés, et qui indique si les sélections multiples sont activées.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de liste.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="selectedValues">Objet qui spécifie les éléments sélectionnés par défaut dans la liste.Les sélections sont récupérées par réflexion en examinant les propriétés de l'objet.</param>
      <param name="size">Valeur à attribuer à l'attribut size de l'élément.</param>
      <param name="allowMultiple">true pour indiquer que les sélections multiples sont activées ; sinon, false.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean,System.Object)">
      <summary>Retourne un contrôle de zone de liste HTML incluant le nom, la taille, les attributs personnalisés définis par un objet attribut, les éléments, l'élément par défaut et les sélections spécifiés, et qui indique si les sélections multiples sont activées.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de liste.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="selectedValues">Objet qui spécifie les éléments sélectionnés par défaut dans la liste.Les sélections sont récupérées par réflexion en examinant les propriétés de l'objet.</param>
      <param name="size">Valeur à attribuer à l'attribut size de l'élément.</param>
      <param name="allowMultiple">true pour indiquer que les sélections multiples sont activées ; sinon, false.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Object)">
      <summary>Retourne un contrôle de zone de liste HTML incluant le nom, les éléments, l'élément par défaut, les attributs personnalisés définis par un objet attribut et les sélections spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de liste.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément select HTML.</param>
      <param name="defaultOption">Texte à afficher pour l'option par défaut de la liste.</param>
      <param name="selectList">Liste d'instances <see cref="T:System.Web.WebPages.Html.SelectListItem" /> servant à remplir la liste.</param>
      <param name="selectedValues">Objet qui spécifie les éléments sélectionnés par défaut dans la liste.Les sélections sont récupérées par réflexion en examinant les propriétés de l'objet.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ObjectToDictionary(System.Object)">
      <summary>Crée un dictionnaire à partir d'un objet, en ajoutant au dictionnaire chaque propriété d'instance publique sous la forme d'une clé avec sa valeur associée.Les propriétés publiques des types dérivés seront également exposées.Utilisé en règle générale avec les objets de type anonyme.</summary>
      <returns>Le dictionnaire de noms de propriétés et de valeurs de propriétés créé.</returns>
      <param name="value">L'objet à convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String)">
      <summary>Retourne un contrôle de mot de passe HTML portant le nom spécifié.</summary>
      <returns>Balisage HTML qui représente le contrôle de mot de passe.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object)">
      <summary>Retourne un contrôle de mot de passe HTML incluant le nom et la valeur spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de mot de passe.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de mot de passe HTML incluant le nom, la valeur et les attributs personnalisés définis par un dictionnaire d'attributs spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de mot de passe.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object,System.Object)">
      <summary>Retourne un contrôle de mot de passe HTML incluant le nom, la valeur et les attributs personnalisés définis par un objet attribut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de mot de passe.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object)">
      <summary>Retourne un contrôle de case d'option HTML incluant le nom et la valeur spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de case d'option.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.L'attribut name définit le groupe auquel appartient la case d'option.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean)">
      <summary>Retourne un contrôle de case d'option HTML incluant le nom, la valeur et l'état sélectionné par défaut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de case d'option.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.L'attribut name définit le groupe auquel appartient la case d'option.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <param name="isChecked">true pour spécifier que le contrôle est sélectionné ; sinon, false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de case d'option HTML incluant le nom, la valeur, le statut sélectionné par défaut et les attributs personnalisés définis par un dictionnaire d'attributs spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de case d'option.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.L'attribut name définit le groupe auquel appartient la case d'option.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <param name="isChecked">true pour spécifier que le contrôle est sélectionné ; sinon, false.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean,System.Object)">
      <summary>Retourne un contrôle de case d'option HTML incluant le nom, la valeur, le statut sélectionné par défaut et les attributs personnalisés définis par un objet attribut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de case d'option.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.L'attribut name définit le groupe auquel appartient la case d'option.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <param name="isChecked">true pour spécifier que le contrôle est sélectionné ; sinon, false.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de case d'option HTML incluant le nom, la valeur et les attributs personnalisés définis par un dictionnaire d'attributs spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de case d'option.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.L'attribut name définit le groupe auquel appartient la case d'option.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Object)">
      <summary>Retourne un contrôle de case d'option HTML incluant le nom, la valeur et les attributs personnalisés définis par un objet attribut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de case d'option.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.L'attribut name définit le groupe auquel appartient la case d'option.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Raw(System.Object)">
      <summary>Encapsule le balisage HTML dans une instance <see cref="T:System.Web.HtmlString" /> afin qu'il soit interprété en tant que balisage HTML.</summary>
      <returns>Code HTML non codé.</returns>
      <param name="value">Objet pour lequel restituer le code HTML.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Raw(System.String)">
      <summary>Encapsule le balisage HTML dans une instance <see cref="T:System.Web.HtmlString" /> afin qu'il soit interprété en tant que balisage HTML.</summary>
      <returns>Code HTML non codé.</returns>
      <param name="value">Chaîne à interpréter en tant que balisage HTML, et non en tant que chaîne codée au format HTML.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String)">
      <summary>Retourne un contrôle d'entrée de texte (zone de texte) multiligne HTML qui porte le nom spécifié.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de texte.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément textarea HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle d'entrée de texte (zone de texte) multiligne HTML incluant le nom spécifié et les attributs personnalisés définis par un dictionnaire d'attributs.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de texte.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément textarea HTML.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.Object)">
      <summary>Retourne un contrôle d'entrée de texte (zone de texte) multiligne HTML incluant le nom spécifié et les attributs personnalisés définis par un objet attribut.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de texte.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément textarea HTML.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String)">
      <summary>Retourne un contrôle d'entrée de texte (zone de texte) multiligne HTML incluant le nom et la valeur spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de texte.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément textarea HTML.</param>
      <param name="value">Texte à afficher.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle d'entrée de texte (zone de texte) multiligne HTML incluant le nom, la valeur et les attributs personnalisés définis par un dictionnaire d'attributs spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de texte.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément textarea HTML.</param>
      <param name="value">Texte à afficher.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle d'entrée de texte (zone de texte) multiligne HTML incluant le nom, la valeur, l'attribut row, l'attribut col et les attributs personnalisés définis par un dictionnaire d'attributs spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de texte.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément textarea HTML.</param>
      <param name="value">Texte à afficher.</param>
      <param name="rows">Valeur à attribuer à l'attribut rows de l'élément.</param>
      <param name="columns">Valeur à attribuer à l'attribut cols de l'élément.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Retourne un contrôle d'entrée de texte (zone de texte) multiligne HTML incluant le nom, la valeur, l'attribut row, l'attribut col et les attributs personnalisés définis par un objet attribut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de texte.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément textarea HTML.</param>
      <param name="value">Texte à afficher.</param>
      <param name="rows">Valeur à attribuer à l'attribut rows de l'élément.</param>
      <param name="columns">Valeur à attribuer à l'attribut cols de l'élément.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Object)">
      <summary>Retourne un contrôle d'entrée de texte (zone de texte) multiligne HTML comportant le nom, la valeur et les attributs personnalisés définis par un objet attribut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de zone de texte.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément textarea HTML.</param>
      <param name="value">Texte à afficher.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String)">
      <summary>Retourne un contrôle de texte HTML portant le nom spécifié.</summary>
      <returns>Balisage HTML qui représente le contrôle de texte.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object)">
      <summary>Retourne un contrôle de texte HTML incluant le nom et la valeur spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de texte.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un contrôle de texte HTML incluant le nom, la valeur et les attributs personnalisés définis par un dictionnaire d'attributs spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de texte.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object,System.Object)">
      <summary>Retourne un contrôle de texte HTML incluant le nom, la valeur et les attributs personnalisés définis par un objet attribut spécifiés.</summary>
      <returns>Balisage HTML qui représente le contrôle de texte.</returns>
      <param name="name">Valeur à attribuer à l'attribut name de l'élément de contrôle HTML.</param>
      <param name="value">Valeur à attribuer à l'attribut value de l'élément.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>Obtient ou définit une valeur qui indique si la page utilise un code JavaScript non obstrusif pour les fonctionnalités Ajax.</summary>
      <returns>true si la page utilise du code JavaScript non obstrusif ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationInputCssClassName">
      <summary>Obtient ou définit le nom de la classe CSS qui définit l'apparence des éléments input en cas d'échec de la validation.</summary>
      <returns>Nom de la classe CSS.La valeur par défaut est field-validation-error.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationInputValidCssClassName">
      <summary>Obtient ou définit le nom de la classe CSS qui définit l'apparence des éléments input en cas de réussite de la validation.</summary>
      <returns>Nom de la classe CSS.La valeur par défaut est input-validation-valid.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String)">
      <summary>Retourne un élément span HTML qui contient le premier message d'erreur de validation du champ de formulaire spécifié.</summary>
      <returns>Si la valeur du champ spécifié est valide, null ; sinon, balisage HTML qui représente le message d'erreur de validation associé au champ spécifié.</returns>
      <param name="name">Nom du champ de formulaire validé.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément span HTML incluant les attributs personnalisés définis par un dictionnaire d'attributs et le premier message d'erreur de validation du champ de formulaire spécifié.</summary>
      <returns>Si la valeur du champ spécifié est valide, null ; sinon, balisage HTML qui représente le message d'erreur de validation associé au champ spécifié.</returns>
      <param name="name">Nom du champ de formulaire validé.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.Object)">
      <summary>Retourne un élément span HTML incluant les attributs personnalisés spécifiés définis par un objet attribut et le premier message d'erreur de validation du champ de formulaire spécifié.</summary>
      <returns>Si la valeur du champ spécifié est valide, null ; sinon, balisage HTML qui représente le message d'erreur de validation associé au champ spécifié.</returns>
      <param name="name">Nom du champ de formulaire validé.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String)">
      <summary>Retourne un élément span HTML qui contient un message d'erreur de validation pour le champ de formulaire spécifié.</summary>
      <returns>Si la valeur du champ spécifié est valide, null ; sinon, balisage HTML qui représente le message d'erreur de validation associé au champ spécifié.</returns>
      <param name="name">Nom du champ de formulaire validé.</param>
      <param name="message">Message d'erreur de validation à afficher.En cas de valeur null, le premier message d'erreur de validation associé au champ de formulaire spécifié est affiché.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément span HTML incluant les attributs personnalisés définis par un dictionnaire d'attributs et un message d'erreur de validation pour le champ de formulaire spécifié.</summary>
      <returns>Si le champ spécifié est valide, null ; sinon, balisage HTML qui représente un message d'erreur de validation associé au champ spécifié.</returns>
      <param name="name">Nom du champ de formulaire validé.</param>
      <param name="message">Message d'erreur de validation à afficher.En cas de valeur null, le premier message d'erreur de validation associé au champ de formulaire spécifié est affiché.</param>
      <param name="htmlAttributes"> Noms et valeurs des attributs personnalisés de l'élément.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String,System.Object)">
      <summary>Retourne un élément span HTML incluant les attributs personnalisés spécifiés définis par un objet attribut et un message d'erreur de validation pour le champ de formulaire spécifié.</summary>
      <returns>Si le champ spécifié est valide, null ; sinon, balisage HTML qui représente un message d'erreur de validation associé au champ spécifié.</returns>
      <param name="name">Nom du champ de formulaire validé.</param>
      <param name="message">Message d'erreur de validation à afficher.En cas de valeur null, le premier message d'erreur de validation associé au champ de formulaire spécifié est affiché.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationMessageCssClassName">
      <summary>Obtient ou définit le nom de la classe CSS qui définit l'apparence des messages d'erreur de validation en cas d'échec de la validation.</summary>
      <returns>Nom de la classe CSS.La valeur par défaut est field-validation-error.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>Obtient ou définit le nom de la classe CSS qui définit l'apparence des messages d'erreur de validation en cas de réussite de la validation.</summary>
      <returns>Nom de la classe CSS.La valeur par défaut est field-validation-valid.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary">
      <summary>Retourne un élément div HTML contenant une liste non triée de tous les messages d'erreur de validation à partir du dictionnaire d'états de modèles.</summary>
      <returns>Balisage HTML qui représente les messages d'erreur de validation.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Boolean)">
      <summary>Retourne un élément div HTML contenant une liste non triée de messages d'erreur de validation à partir du dictionnaire d'états de modèles et qui exclut éventuellement les erreurs au niveau du champ.</summary>
      <returns>Balisage HTML qui représente les messages d'erreur de validation.</returns>
      <param name="excludeFieldErrors">true pour exclure les messages d'erreur de validation au niveau du champ de la liste ; false pour inclure les messages d'erreur de validation au niveau du champ et du modèle.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément div HTML incluant les attributs personnalisés spécifiés définis par un dictionnaire d'attributs et une liste non triée de tous les messages d'erreur de validation figurant dans le dictionnaire d'états de modèles.</summary>
      <returns>Balisage HTML qui représente les messages d'erreur de validation.</returns>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Object)">
      <summary>Retourne un élément div HTML incluant les attributs personnalisés spécifiés définis par un objet attribut et une liste non triée de tous les messages d'erreur de validation figurant dans le dictionnaire d'états de modèles.</summary>
      <returns>Balisage HTML qui représente les messages d'erreur de validation.</returns>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String)">
      <summary>Retourne un élément div HTML contenant un message résumé et une liste non triée de tous les messages d'erreur de validation figurant dans le dictionnaire d'états de modèles.</summary>
      <returns>Balisage HTML qui représente les messages d'erreur de validation.</returns>
      <param name="message">Message précédent la liste des messages d'erreur de validation.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément div HTML incluant les attributs personnalisés spécifiés définis par un dictionnaire d'attributs, ainsi qu'un message résumé et une liste non triée de messages d'erreur de validation à partir du dictionnaire d'états de modèles, et qui exclut éventuellement les erreurs au niveau du champ.</summary>
      <returns>Balisage HTML qui représente les messages d'erreur de validation.</returns>
      <param name="message">Message résumé précédent la liste des messages d'erreur de validation.</param>
      <param name="excludeFieldErrors">true pour exclure les messages d'erreur de validation au niveau du champ des résultats ; false pour inclure les messages d'erreur de validation au niveau du champ et du modèle.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Boolean,System.Object)">
      <summary>Retourne un élément div HTML incluant les attributs personnalisés spécifiés définis par un objet attribut, ainsi qu'un message résumé et une liste non triée de messages d'erreur de validation à partir du dictionnaire d'états de modèles, et qui exclut éventuellement les erreurs au niveau du champ.</summary>
      <returns>Balisage HTML qui représente les messages d'erreur de validation.</returns>
      <param name="message">Message résumé précédent la liste des messages d'erreur de validation.</param>
      <param name="excludeFieldErrors">true pour exclure les messages d'erreur de validation au niveau du champ des résultats ; false pour inclure les messages d'erreur de validation au niveau du champ.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément div HTML incluant les attributs personnalisés spécifiés définis par un dictionnaire d'attributs, ainsi qu'un message résumé et une liste non triée de tous les messages d'erreur de validation à partir du dictionnaire d'états de modèles.</summary>
      <returns>Balisage HTML qui représente les messages d'erreur de validation.</returns>
      <param name="message">Message précédent la liste des messages d'erreur de validation.</param>
      <param name="htmlAttributes">Noms et valeurs des attributs personnalisés de l'élément.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Object)">
      <summary>Retourne un élément div HTML incluant les attributs personnalisés spécifiés définis par un objet attribut, ainsi qu'un message résumé et une liste non triée de tous les messages d'erreur de validation à partir du dictionnaire d'états de modèles.</summary>
      <returns>Balisage HTML qui représente les messages d'erreur de validation.</returns>
      <param name="message">Message résumé précédent la liste des messages d'erreur de validation.</param>
      <param name="htmlAttributes">Objet qui contient les attributs personnalisés de l'élément.Les noms et les valeurs des attributs sont récupérés par réflexion en examinant les propriétés de l'objet.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationSummaryClass">
      <summary>Obtient ou définit le nom de la classe CSS qui définit l'apparence d'un résumé des validations en cas d'échec de la validation.</summary>
      <returns>Nom de la classe CSS.La valeur par défaut est validation-summary-errors.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationSummaryValidClass">
      <summary>Obtient ou définit le nom de la classe CSS qui définit l'apparence d'un résumé des validations en cas de réussite de la validation.</summary>
      <returns>Nom de la classe CSS.La valeur par défaut est validation-summary-valid.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.ModelState">
      <summary>Encapsule l'état de la liaison du modèle dans une propriété d'un argument de méthode d'action, ou dans l'argument lui-même.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelState.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.Html.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelState.Errors">
      <summary>Retourne une liste de chaînes qui contient les erreurs qui se sont produites pendant la liaison du modèle.</summary>
      <returns>Erreurs qui se sont produites pendant la liaison du modèle.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelState.Value">
      <summary>Retourne un objet qui encapsule la valeur liée pendant la liaison du modèle.</summary>
      <returns>Valeur liée.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.ModelStateDictionary">
      <summary>Représente le résultat de la liaison d'un formulaire publié à une méthode d'action, qui inclut des informations telles que l'état de la validation et les messages d'erreur de validation.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.#ctor(System.Web.WebPages.Html.ModelStateDictionary)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" /> en utilisant les valeurs copiées à partir du dictionnaire d'états de modèles spécifié.</summary>
      <param name="dictionary">Dictionnaire d'états de modèles à partir duquel les valeurs sont copiées.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>Ajoute l'élément spécifié au dictionnaire d'états de modèles.</summary>
      <param name="item">Élément à ajouter au dictionnaire d'états de modèles.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Add(System.String,System.Web.WebPages.Html.ModelState)">
      <summary>Ajoute un élément qui a la clé et la valeur spécifiées au dictionnaire d'états de modèles.</summary>
      <param name="key">Clé.</param>
      <param name="value">Valeur.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.AddError(System.String,System.String)">
      <summary>Ajoute un message d'erreur à l'état de modèle associé à la clé spécifiée.</summary>
      <param name="key">Clé associée à l'état de modèle auquel le message d'erreur est ajouté.</param>
      <param name="errorMessage">Message d'erreur.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.AddFormError(System.String)">
      <summary>Ajoute un message d'erreur à l'état de modèle associé à l'intégralité du formulaire.</summary>
      <param name="errorMessage">Message d'erreur.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Clear">
      <summary>Supprime tous les éléments du dictionnaire d'états de modèles.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>Détermine si le dictionnaire d'états de modèles contient l'élément spécifié.</summary>
      <returns>true si le dictionnaire d'états de modèles contient l'élément spécifié ; sinon, false.</returns>
      <param name="item">Élément à rechercher.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Détermine si le dictionnaire d'états de modèles contient la clé spécifiée.</summary>
      <returns>true si le dictionnaire d'états de modèles contient la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé à rechercher.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState}[],System.Int32)">
      <summary>Copie les éléments du dictionnaire d'états de modèles dans un tableau, en commençant à l'index spécifié.</summary>
      <param name="array">Instance <see cref="T:System.Array" /> unidimensionnelle dans laquelle les éléments sont copiés.</param>
      <param name="arrayIndex">Index dans <paramref name="array" /> au niveau duquel commence la copie.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Count">
      <summary>Obtient le nombre d'états de modèles que le dictionnaire d'états de modèles contient.</summary>
      <returns>Nombre d'états de modèles du dictionnaire d'états de modèles.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection.</summary>
      <returns>Énumérateur permettant d'itérer au sein de la collection.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.IsReadOnly">
      <summary>Obtient une valeur qui indique si le dictionnaire d'états de modèles est en lecture seule.</summary>
      <returns>true si le dictionnaire d'états de modèles est en lecture seule ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.IsValid">
      <summary>Obtient une valeur qui indique si des messages d'erreur sont associés à des états de modèles du dictionnaire d'états de modèles.</summary>
      <returns>true si des messages d'erreur sont associés à un état de modèle du dictionnaire ; sinon, false.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.IsValidField(System.String)">
      <summary>Détermine si des messages d'erreur sont associés à la clé spécifiée.</summary>
      <returns>true si aucun message d'erreur n'est associé à la clé spécifiée ou si la clé spécifiée n'existe pas ; sinon, false.</returns>
      <param name="key">Clé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Item(System.String)">
      <summary>Obtient ou définit le modèle d'état associé à la clé spécifiée dans le dictionnaire d'états de modèles.</summary>
      <returns>État de modèle associé à la clé spécifiée dans le dictionnaire.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Keys">
      <summary>Obtient une liste qui contient les clés du dictionnaire d'états de modèles.</summary>
      <returns>Liste des clés du dictionnaire.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Merge(System.Web.WebPages.Html.ModelStateDictionary)">
      <summary>Copie les valeurs du dictionnaire d'états de modèles spécifié dans cette instance <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" />, en remplaçant les valeurs existantes lorsque les clés sont les mêmes.</summary>
      <param name="dictionary">Dictionnaire d'états de modèles à partir duquel les valeurs sont copiées.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>Supprime la première occurrence de l'élément spécifié du dictionnaire d'états de modèles.</summary>
      <returns>true si l'élément a été correctement supprimé du dictionnaire d'états de modèles ; false si l'élément n'a pas été supprimé ou s'il n'existe pas dans le dictionnaire d'états de modèles.</returns>
      <param name="item">Élément à supprimer.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Remove(System.String)">
      <summary>Supprime l'élément comportant la clé spécifiée du dictionnaire d'états de modèles.</summary>
      <returns>true si l'élément a été correctement supprimé du dictionnaire d'états de modèles ; false si l'élément n'a pas été supprimé ou s'il n'existe pas dans le dictionnaire d'états de modèles.</returns>
      <param name="key">Clé de l'élément à supprimer.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.SetModelValue(System.String,System.Object)">
      <summary>Définit la valeur du modèle d'état associé à la clé spécifiée.</summary>
      <param name="key">Clé pour laquelle définir la valeur.</param>
      <param name="value">Valeur sur laquelle définir la clé.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui permet d'itérer au sein du dictionnaire d'états de modèles.</summary>
      <returns>Énumérateur qui permet d'itérer au sein du dictionnaire d'états de modèles.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.TryGetValue(System.String,System.Web.WebPages.Html.ModelState@)">
      <summary>Obtient la valeur d'état de modèle associée à la clé spécifiée.</summary>
      <returns>true si le dictionnaire d'états de modèles contient un élément incluant la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé pour laquelle obtenir la valeur.</param>
      <param name="value">Lorsque cette méthode est retournée, si la clé est trouvée, contient la valeur d'état de modèle associée à la clé spécifiée ; sinon, contient la valeur par défaut du type <see cref="T:System.Web.WebPages.Html.ModelState" />.Ce paramètre est passé sans être initialisé.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Values">
      <summary>Obtient une liste qui contient les valeurs du dictionnaire d'états de modèles.</summary>
      <returns>Liste des valeurs du dictionnaire.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.SelectListItem">
      <summary>Représente un élément d'une liste de sélection HTML.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.SelectListItem.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.Html.SelectListItem" /> à l'aide des paramètres par défaut.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.SelectListItem.#ctor(System.Web.WebPages.Html.SelectListItem)">
      <summary>I	nitialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.Html.SelectListItem" /> en copiant l'élément de liste de sélection spécifié.</summary>
      <param name="item">Élément de liste de sélection à copier.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Selected">
      <summary>Obtient ou définit une valeur qui indique si l'instance <see cref="T:System.Web.WebPages.Html.SelectListItem" /> est sélectionnée.</summary>
      <returns>true si l'élément de liste de sélection est sélectionné ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Text">
      <summary>Obtient ou définit le texte qui permet d'afficher l'instance <see cref="T:System.Web.WebPages.Html.SelectListItem" /> sur une page Web.</summary>
      <returns>Texte qui permet d'afficher l'élément de liste de sélection.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Value">
      <summary>Obtient ou définit la valeur de l'attribut value HTML de l'élément option HTML associé à l'instance <see cref="T:System.Web.WebPages.Html.SelectListItem" />.</summary>
      <returns>Valeur de l'attribut value HTML associé à l'élément de liste de sélection.</returns>
    </member>
    <member name="T:System.Web.WebPages.Instrumentation.InstrumentationService">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Représente des pages Web avec des services.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.#ctor">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.Instrumentation.InstrumentationService" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.BeginContext(System.Web.HttpContextBase,System.String,System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Appelée avant le résultat du contexte spécifié.</summary>
      <param name="context">Contexte.</param>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
      <param name="writer">Le Writer.</param>
      <param name="startPosition">Position de départ.</param>
      <param name="length">Longueur du contexte.</param>
      <param name="isLiteral">Détermine si le contexte existe.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.EndContext(System.Web.HttpContextBase,System.String,System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Appelée avant le résultat du contexte spécifié.</summary>
      <param name="context">Contexte.</param>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
      <param name="writer">Le Writer.</param>
      <param name="startPosition">Position de départ.</param>
      <param name="length">Longueur du contexte.</param>
      <param name="isLiteral">Détermine si le contexte existe.</param>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.InstrumentationService.IsAvailable">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient une valeur qui indique si le service est disponible.</summary>
      <returns>true si le service est disponible ; sinon, false.</returns>
    </member>
    <member name="T:System.Web.WebPages.Instrumentation.PositionTagged`1">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Représente une position balisée.</summary>
      <typeparam name="T">Type de position.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.#ctor(`0,System.Int32)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</summary>
      <param name="value">Valeurs de l'instance actuelle.</param>
      <param name="offset">Décalage.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.Equals(System.Object)">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Détermine si l'objet spécifié est égal à l'objet actuel.</summary>
      <returns>true si l'objet spécifié est égal à l'objet actuel ; sinon, false.</returns>
      <param name="obj">Objet à comparer.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.GetHashCode">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient le code de hachage de cette instance.</summary>
      <returns>Code de hachage de cette instance.</returns>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Equality(System.Web.WebPages.Instrumentation.PositionTagged{`0},System.Web.WebPages.Instrumentation.PositionTagged{`0})">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Détermine si les deux objets sont égaux.</summary>
      <returns>true si les deux objets sont égaux ; sinon, false.</returns>
      <param name="left">Le premier objet.</param>
      <param name="right">Le deuxième objet.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Implicit(System.Tuple{`0,System.Int32})~System.Web.WebPages.Instrumentation.PositionTagged{`0}">
      <summary>Convertit l'objet spécifié en objet <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</summary>
      <returns>
        <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> qui représente la valeur <paramref name="value" /> convertie.</returns>
      <param name="value">Objet à convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Implicit(System.Web.WebPages.Instrumentation.PositionTagged{`0})~`0">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Convertit <paramref name="value" /> en objet <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</summary>
      <returns>The <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> qui représente la valeur <paramref name="value" /> convertie.</returns>
      <param name="value">Objet à convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Inequality(System.Web.WebPages.Instrumentation.PositionTagged{`0},System.Web.WebPages.Instrumentation.PositionTagged{`0})">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Indique si les deux objets ne sont pas égaux.</summary>
      <returns>true si les deux objets ne sont pas égaux ; sinon, false.</returns>
      <param name="left">Le premier objet.</param>
      <param name="right">Le deuxième objet.</param>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.PositionTagged`1.Position">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient ou définit la position associée au <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</summary>
      <returns>Position associée au <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.ToString">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Retourne une représentation de l'objet <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</summary>
      <returns>Chaîne qui représente l'objet <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.PositionTagged`1.Value">
      <summary>Ce type/membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.Obtient ou définit la valeur de l'instance actuelle.</summary>
      <returns>Valeur de l'instance actuelle.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider">
      <summary>Définit un fournisseur de stockage d'étendues de demandes ASP.NET.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.ApplicationScope">
      <summary>Obtient le dictionnaire qui permet de stocker l'étendue d'application.</summary>
      <returns>Dictionnaire qui stocke les données de l'étendue d'application.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.CurrentScope">
      <summary>Obtient ou définit le dictionnaire qui permet de stocker les données dans l'étendue actuelle.</summary>
      <returns>Dictionnaire qui stocke les données de l'étendue actuelle.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.GlobalScope">
      <summary>Obtient le dictionnaire qui permet de stocker les données dans l'étendue globale.</summary>
      <returns>Dictionnaire qui stocke les données de l'étendue globale.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.RequestScope">
      <summary>Obtient le dictionnaire qui permet de stocker les données dans l'étendue de la demande.</summary>
      <returns>Dictionnaire qui stocke les données de l'étendue de la demande.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.IScopeStorageProvider">
      <summary>Définit un dictionnaire qui fournit un accès délimité aux données.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.IScopeStorageProvider.CurrentScope">
      <summary>Obtient et définit le dictionnaire qui permet de stocker les données dans l'étendue actuelle.</summary>
      <returns>Dictionnaire qui stocke les données de l'étendue actuelle.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.IScopeStorageProvider.GlobalScope">
      <summary>Obtient le dictionnaire qui permet de stocker les données dans l'étendue globale.</summary>
      <returns>Dictionnaire qui stocke les données de l'étendue globale.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.ScopeStorage">
      <summary>Définit une classe qui permet de contenir le stockage associé à une étendue temporaire.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorage.CreateTransientScope">
      <summary>Retourne un dictionnaire qui permet de stocker les données dans une étendue temporaire en fonction de l'étendue de la propriété <see cref="P:System.Web.WebPages.Scope.ScopeStorage.CurrentScope" />.</summary>
      <returns>Dictionnaire qui stocke les données de l'étendue temporaire.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorage.CreateTransientScope(System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Retourne un dictionnaire qui permet de stocker les données dans une étendue temporaire.</summary>
      <returns>Dictionnaire qui stocke les données de l'étendue temporaire.</returns>
      <param name="context">Contexte.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.CurrentProvider">
      <summary>Obtient ou définit le fournisseur d'étendues actuel.</summary>
      <returns>Fournisseur d'étendues actuel.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.CurrentScope">
      <summary>Obtient le dictionnaire qui permet de stocker les données dans l'étendue actuelle.</summary>
      <returns>Dictionnaire qui stocke les données de l'étendue actuelle.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.GlobalScope">
      <summary>Obtient le dictionnaire qui permet de stocker les données dans l'étendue globale.</summary>
      <returns>Dictionnaire qui stocke les données de l'étendue globale.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.ScopeStorageDictionary">
      <summary>Représente une collection de clés et valeurs qui permettent de stocker les données à différents niveaux d'étendue (local, global, etc.).</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> à l'aide de l'étendue de base spécifiée.</summary>
      <param name="baseScope">Étendue de base.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>Ajoute une paire clé/valeur à l'objet <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> à l'aide de la collection générique spécifiée.</summary>
      <param name="item">Paire clé/valeur.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Add(System.Object,System.Object)">
      <summary>Ajoute la clé et la valeur spécifiées à l'objet <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</summary>
      <param name="key">Clé.</param>
      <param name="value">Valeur.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BackingStore">
      <summary>Obtient le dictionnaire qui stocke les données d'objet <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope">
      <summary>Obtient l'étendue de base de l'objet <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</summary>
      <returns>Obtient l'étendue de base de l'objet <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Clear">
      <summary>Supprime toutes les clés et valeurs des objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concaténés.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>Retourne une valeur qui indique si la paire clé/valeur spécifiée existe dans l'objet <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> ou <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>true si l'objet <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> ou <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> contient un élément incluant la paire clé/valeur spécifiée ; sinon, false.</returns>
      <param name="item">Paire clé/valeur.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.ContainsKey(System.Object)">
      <summary>Retourne une valeur qui indique si la clé spécifiée existe dans l'objet <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> ou <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>true si l'objet <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> ou <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> contient un élément incluant la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)">
      <summary>Copie tous les éléments des objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> dans un objet <see cref="T:System.Array" />, en commençant à l'index spécifié.</summary>
      <param name="array">Tableau.</param>
      <param name="arrayIndex">Index de base zéro dans <paramref name="array" />.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Count">
      <summary>Obtient le nombre de paires clé/valeur figurant dans les objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concaténés.</summary>
      <returns>Nombre de paires clé/valeur.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.GetEnumerator">
      <summary>Retourne un énumérateur qui permet d'itérer au sein d'objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concaténés.</summary>
      <returns>Objet <see cref="T:System.Collections.Generic.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.GetItems">
      <summary>Retourne un énumérateur qui permet d'itérer au sein d'éléments distincts d'objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concaténés.</summary>
      <returns>Énumérateur qui contient des éléments distincts des objets dictionnaire concaténés.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.IsReadOnly">
      <summary>Obtient une valeur qui indique si l'objet <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> est en lecture seule.</summary>
      <returns>true si l'objet <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> est en lecture seule ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Item(System.Object)">
      <summary>Obtient ou définit l'élément associé à la clé spécifiée.</summary>
      <returns>Élément qui contient la clé spécifiée.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Keys">
      <summary>Obtient un objet <see cref="T:System.Collections.Generic.List`1" /> qui contient les clés des objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concaténés.</summary>
      <returns>Objet qui contient les clés.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>Supprime la paire clé/valeur spécifiée des objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>true si la paire clé/valeur est supprimée ou false si <paramref name="item" /> est introuvable dans les objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concaténés.</returns>
      <param name="item">Paire clé/valeur.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Remove(System.Object)">
      <summary>Supprime la paire clé/valeur spécifiée des objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>true si la paire clé/valeur est supprimée ou false si <paramref name="key" /> est introuvable dans les objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concaténés.</returns>
      <param name="key">Clé.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.SetValue(System.Object,System.Object)">
      <summary>Définit une valeur à l'aide de la clé spécifiée dans les objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concaténés.</summary>
      <param name="key">Clé.</param>
      <param name="value">Valeur.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur pour les objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concaténés.</summary>
      <returns>Énumérateur.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.TryGetValue(System.Object,System.Object@)">
      <summary>Obtient la valeur associée à la clé spécifiée à partir des objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concaténés.</summary>
      <returns>true si les objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concaténés contiennent un élément incluant la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé.</param>
      <param name="value">Lorsque cette méthode est retournée, si la clé existe, contient la valeur associée à la clé spécifiée ; sinon, valeur par défaut pour le type du paramètre <paramref name="value" />.Ce paramètre est passé sans être initialisé.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Values">
      <summary>Obtient un objet <see cref="T:System.Collections.Generic.List`1" /> qui contient les valeurs des objets <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> et <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concaténés.</summary>
      <returns>Objet qui contient les valeurs.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.StaticScopeStorageProvider">
      <summary>Fournit un accès délimité aux données statiques.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.StaticScopeStorageProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.WebPages.Scope.StaticScopeStorageProvider" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.StaticScopeStorageProvider.CurrentScope">
      <summary>Obtient ou définit un dictionnaire qui stocke les données actuelles sous un contexte statique.</summary>
      <returns>Dictionnaire qui fournit les données limitées actuelles.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.StaticScopeStorageProvider.GlobalScope">
      <summary>Obtient ou définit un dictionnaire qui stocke les données globales sous un contexte statique.</summary>
      <returns>Dictionnaire qui fournit les données limitées globales.</returns>
    </member>
  </members>
</doc>